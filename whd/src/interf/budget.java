/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interf;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import mycode.dbConnect;
import mycode.month;

/**
 *
 * @author LENOVO
 */
public class budget extends javax.swing.JPanel {

    /**
     * Creates new form budget
     */
    Connection conn= null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    DateFormat df= DateFormat.getDateInstance();
    public budget() {
        initComponents();
        conn=dbConnect.connect();
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jMonthChooser1 = new com.toedter.calendar.JMonthChooser();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(51, 51, 51));
        setPreferredSize(new java.awt.Dimension(827, 559));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Monthly Budget");

        jMonthChooser1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jButton1.setBackground(new java.awt.Color(51, 51, 51));
        jButton1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("View");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(51, 51, 51));
        jTable1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Amount(Rs)", "Total(Rs)"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jMonthChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(190, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jMonthChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //view monthly budget
        
        int yr=jYearChooser1.getYear();
        String str=Integer.toString(yr);
        int mo=jMonthChooser1.getMonth()+1;
        
       
        month s=new month();
        String moS=s.month(mo);
       
       
        //previous month
        int moo=mo-1;
        month d=new month();
        String  Str1=d.month(moo);
      
        //previous previous month
        int mooo=mo-2;
        String Str2=null;
        month w=new month();
        Str2=w.month(mooo);
         int lastyr=yr-1;
                System.out.println(yr);
                String lastyear=String.valueOf(lastyr);
                System.out.println(lastyear);  
        
//        String Str2=Integer.toString(moo);
            if(moS.equals("January")){
                String x="December";
                String y="November";
                 //previous year
               
                 try{
            String sql="SELECT elect,water,tele,rent,salary,ret_damage,stoc_expe,deliv,oth_exp,ret_inco,oth_inc FROM month_trans WHERE month='"+x+"' and year='"+lastyear+"'";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            

            while(rs.next()){
                double pcode=rs.getDouble("elect");
                double pname=rs.getDouble("water");
                double pduration=rs.getDouble("tele");
                double semfee=rs.getDouble("rent");
                double salary=rs.getDouble("salary");
                double retDam=rs.getDouble("ret_damage");
                double stock=rs.getDouble("stoc_expe");
                double deli=rs.getDouble("deliv");
                double OthEx=rs.getDouble("oth_exp");
                double retInc=rs.getDouble("ret_inco");
                double othInc=rs.getDouble("oth_inc");

                String sal=Double.toString(salary);
                String Retdma=Double.toString(retDam);
                String stoc=Double.toString(stock);
                String delivery=Double.toString(deli);
                String electricity=Double.toString(pcode);
                String water=Double.toString(pname);
                String tele=Double.toString(pduration);
                String rent=Double.toString(semfee);
                String expe=Double.toString(OthEx);
                String retIncc=Double.toString(retInc);
                String otheInc=Double.toString(othInc);
                
                
                String q="SELECT elect,water,tele,rent,salary,ret_damage,stoc_expe,deliv,oth_exp,ret_inco,oth_inc FROM month_trans WHERE month='"+y+"' and year='"+lastyear+"'";
                pst=conn.prepareStatement(q);
                rs=pst.executeQuery();
                
                while(rs.next()){
                double pcodee=rs.getDouble("elect");
                double pnamee=rs.getDouble("water");
                double pduratione=rs.getDouble("tele");
                double semfeee=rs.getDouble("rent");
                double salarye=rs.getDouble("salary");
                double retDame=rs.getDouble("ret_damage");
                double stocke=rs.getDouble("stoc_expe");
                double delie=rs.getDouble("deliv");
                double OthExe=rs.getDouble("oth_exp");
                double retInce=rs.getDouble("ret_inco");
                double othInce=rs.getDouble("oth_inc");
                
                
                String sale=Double.toString(salary);
                String Retdmae=Double.toString(retDam);
                String stoce=Double.toString(stock);
                String deliverye=Double.toString(deli);
                String electricitye=Double.toString(pcode);
                String watere=Double.toString(pname);
                String telee=Double.toString(pduration);
                String rente=Double.toString(semfee);
                String expee=Double.toString(OthEx);
                String retIncce=Double.toString(retInc);
                String otheInce=Double.toString(othInc);
                   
              
                        double st=0;
                        double rett=0;
                        double OE=0;
                        double sall=0;
                        double del=0;
                        double elec=0;
                        double wter=0;
                        double tel=0;
                        double rettt=0;
                        
                     //income
                
                 DefaultTableModel model =(DefaultTableModel) jTable1.getModel();
                 model.addRow(new Object[]{"INCOME", "",""});
                 
                   double retIncome=0;
                   double oi=0;
                   
                 String aq="Select balance from month_trans where month='"+x+"' and year='"+lastyear+"'";
                    try {
                        pst=conn.prepareStatement(aq);
                        rs=pst.executeQuery();
                         while(rs.next()){
                              double bal=rs.getDouble("balance");
                              String balance=Double.toString(bal);
                              model.addRow(new Object[]{"Balance", balance,""});
                //retailer income
                
                if(retInc==0 || retInce==0){
                    retIncome=(retInc+retInce);
                    String ri=Double.toString(retIncome);
                     model.addRow(new Object[]{"Retailer Income",ri,""});
                }else{
                    retIncome=(retInc+retInce)/2;
                    String ri=Double.toString(retIncome);
                    model.addRow(new Object[]{"Retailer Income",ri,""});
                }
                //other income
                
                if(othInc==0 || othInce==0){
                    oi=(othInc+othInce);
                    String In=Double.toString(oi);
                    model.addRow(new Object[]{"Other Income",In,""});
                }else{
                    oi=(othInc+othInce)/2;
                    String In=Double.toString(oi);
                    model.addRow(new Object[]{"Other Income",In,""});
                }
                
                
               
                              
                              
                 
                  

                    //total income
                    double income=retIncome+oi+bal;
                    String totIncome=Double.toString(income);
               model.addRow(new Object[]{"Expected Total Income","",totIncome});
               model.addRow(new Object[]{"","",""});
               model.addRow(new Object[]{"","",""});
               model.addRow(new Object[]{"EXPENSE","",""});
                         
                         
                         
                
                  //stock expense
              if(stock==0 ||stocke==0){
                 st=(stock+stocke);
                  String ss=Double.toString(st);
                  model.addRow(new Object[]{"Stock Expense",ss,""});
              }else{
                   st=(stock+stocke)/2;
                  String ss=Double.toString(st);
                  model.addRow(new Object[]{"Stock Expense",ss,""});
              }

                
                
                //retailer damage
                 if(retDam==0 || retDame==0){
                     rett=(retDam+retDame);
                     String rt=Double.toString(rett);
                    model.addRow(new Object[]{"Retailer Damage",rt,""});
                 }else{
                       rett=(retDam+retDame)/2;
                     String rt=Double.toString(rett);
                     model.addRow(new Object[]{"Retailer Damage",rt,""});
                 }
                
                
               
                
                //salary
                if(salary==0 || salarye==0){
                    sall=(salary+salarye);
                    String ss=Double.toString(sall);
                    model.addRow(new Object[]{"Employee Salary",ss,""});
                }else{
                    sall=(salary+salarye)/2;  
                    String ss=Double.toString(sall);
                   model.addRow(new Object[]{"Employee Salary",ss,""});
                }
                //delivery
                if(deli==0 || delie==0){
                      del=(deli+delie);
                    String de=Double.toString(del);
                    model.addRow(new Object[]{"Delivery Payment",de,""});
                   
                }else{
                       del=(deli+delie)/2;
                    String de=Double.toString(del);
                   model.addRow(new Object[]{"Delivery Payment",de,""});
                }
               
                
                //electricity
                if(pcode==0 || pcodee==0){
                      elec=(pcode+pcodee);
                    String ele=Double.toString(elec);
                    
                }else{
                    elec=(pcode+pcodee)/2;
                    String ele=Double.toString(elec);
                   
                }
                
                //water
                if(pname==0 || pnamee==0){
                    wter=(pname+pnamee);
                    String wt=Double.toString(wter);
                    
                }else{
                    wter=(pname+pnamee)/2;
                    String wt=Double.toString(wter);
                   
                }
                
                //telephone
                if(pduration==0 || pduratione==0){
                   tel=(pduration+pduratione);
                    String te=Double.toString(tel);
                   
                }else{
                     tel=(pduration+pduratione)/2;
                    String te=Double.toString(tel);
                   
                }
                //rent
                if(semfee==0 ||semfeee==0){
                     rettt=(semfee+semfeee);
                    String re=Double.toString(rettt);
                    
                    
                }else{
                     rettt=(semfee+semfeee);
                    String re=Double.toString(rettt);
                    
                }
                double uti=rettt+tel+wter+elec;
                String Utilities=String.valueOf(uti);
                model.addRow(new Object[]{"Utilities",Utilities,""});
                
               //other expenses
                if(OthEx==0 || OthExe==0){
                    OE=(OthEx+OthExe);
                    String Othe=Double.toString(OE);
                    model.addRow(new Object[]{"Other Expenses",Othe,""});
                }else{
                     OE=(OthEx+OthExe)/2;
                    String Othe=Double.toString(OE);
                        model.addRow(new Object[]{"Other Expenses",Othe,""});
                }
                               
                               //  total expense
                    double expense=st+rett+OE+sall+del+elec+wter+tel+rettt;
                    String totExpense=Double.toString(expense);  
                      model.addRow(new Object[]{"Expected Total Expense","",totExpense});
                    //profit
                    double profit=income-expense;
                    String pro=Double.toString(profit);
                 model.addRow(new Object[]{"","",""});
                 model.addRow(new Object[]{"","",""});
                 model.addRow(new Object[]{"Expected Profit/Loss","",pro});

                    if(profit>0){
                       String value="(Profit)";
                        model.addRow(new Object[]{"Status","",value});
                    }else{
                      String value="(Loss)";
                        model.addRow(new Object[]{"Status","",value});  
                    }
//                    
                   
//             String Q= "INSERT INTO budget(year,month,elect,water,tele,rent,salary,ret_damage,stoc_expe,deliv,oth_exp,ret_inco,oth_inc,tot_income,tot_expense,balance) values ('"+str+"','"+moS+"',"+ elec+","+ wter+","+ tel+","+ rettt+","+ sall+","+rett+","+st+","+del+","+OE+","+retIncome+","+oi+","+income+","+expense+","+profit+")";
//             pst= conn.prepareStatement(Q);
//             pst.execute();
//                    System.out.println(Q);
//                         }
//               
                         } } catch (SQLException ex) {
                        Logger.getLogger(budget.class.getName()).log(Level.SEVERE, null, ex);
                   }
             
               
             
               
              
                  

                 

//                }

            }

        }}catch(Exception e){
            System.out.println(e);
        }
            }else if (moS.equals("February")){
                String a="January";
                String b="December";
                 try{
            String sql="SELECT elect,water,tele,rent,salary,ret_damage,stoc_expe,deliv,oth_exp,ret_inco,oth_inc FROM month_trans WHERE month='"+a+"' and year='"+str+"'";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            System.out.println(sql);

            while(rs.next()){
                double pcode=rs.getDouble("elect");
                double pname=rs.getDouble("water");
                double pduration=rs.getDouble("tele");
                double semfee=rs.getDouble("rent");
                double salary=rs.getDouble("salary");
                double retDam=rs.getDouble("ret_damage");
                double stock=rs.getDouble("stoc_expe");
                double deli=rs.getDouble("deliv");
                double OthEx=rs.getDouble("oth_exp");
                double retInc=rs.getDouble("ret_inco");
                double othInc=rs.getDouble("oth_inc");

                String sal=Double.toString(salary);
                String Retdma=Double.toString(retDam);
                String stoc=Double.toString(stock);
                String delivery=Double.toString(deli);
                String electricity=Double.toString(pcode);
                String water=Double.toString(pname);
                String tele=Double.toString(pduration);
                String rent=Double.toString(semfee);
                String expe=Double.toString(OthEx);
                String retIncc=Double.toString(retInc);
                String otheInc=Double.toString(othInc);
                
                
                String q="SELECT elect,water,tele,rent,salary,ret_damage,stoc_expe,deliv,oth_exp,ret_inco,oth_inc FROM month_trans WHERE month='"+b+"' and year='"+lastyear+"'";
                pst=conn.prepareStatement(q);
                rs=pst.executeQuery();
              
                while(rs.next()){
                double pcodee=rs.getDouble("elect");
                double pnamee=rs.getDouble("water");
                double pduratione=rs.getDouble("tele");
                double semfeee=rs.getDouble("rent");
                double salarye=rs.getDouble("salary");
                double retDame=rs.getDouble("ret_damage");
                double stocke=rs.getDouble("stoc_expe");
                double delie=rs.getDouble("deliv");
                double OthExe=rs.getDouble("oth_exp");
                double retInce=rs.getDouble("ret_inco");
                double othInce=rs.getDouble("oth_inc");
                
                
                String sale=Double.toString(salary);
                String Retdmae=Double.toString(retDam);
                String stoce=Double.toString(stock);
                String deliverye=Double.toString(deli);
                String electricitye=Double.toString(pcode);
                String watere=Double.toString(pname);
                String telee=Double.toString(pduration);
                String rente=Double.toString(semfee);
                String expee=Double.toString(OthEx);
                String retIncce=Double.toString(retInc);
                String otheInce=Double.toString(othInc);
                   
              
                        double st=0;
                        double rett=0;
                        double OE=0;
                        double sall=0;
                        double del=0;
                        double elec=0;
                        double wter=0;
                        double tel=0;
                        double rettt=0;
                        
                     //income
                
                 DefaultTableModel model =(DefaultTableModel) jTable1.getModel();
                 model.addRow(new Object[]{"INCOME", "",""});
                 
                   double retIncome=0;
                   double oi=0;
                   
                 String aq="Select balance from month_trans where month='"+a+"' and year='"+str+"'";
                    
                    try {
                        pst=conn.prepareStatement(aq);
                        rs=pst.executeQuery();
                         while(rs.next()){
                              double bal=rs.getDouble("balance");
                              String balance=Double.toString(bal);
                            
                              model.addRow(new Object[]{"Balance", balance,""});
                //retailer income
                
                if(retInc==0 || retInce==0){
                    retIncome=(retInc+retInce);
                    String ri=Double.toString(retIncome);
                     model.addRow(new Object[]{"Retailer Income",ri,""});
                }else{
                    retIncome=(retInc+retInce)/2;
                    String ri=Double.toString(retIncome);
                    model.addRow(new Object[]{"Retailer Income",ri,""});
                }
                //other income
                
                if(othInc==0 || othInce==0){
                    oi=(othInc+othInce);
                    String In=Double.toString(oi);
                    model.addRow(new Object[]{"Other Income",In,""});
                }else{
                    oi=(othInc+othInce)/2;
                    String In=Double.toString(oi);
                    model.addRow(new Object[]{"Other Income",In,""});
                }
                
                
               
                              
                              
                 
                  

                    //total income
                    double income=retIncome+oi+bal;
                    String totIncome=Double.toString(income);
               model.addRow(new Object[]{"Expected Total Income","",totIncome});
               model.addRow(new Object[]{"","",""});
               model.addRow(new Object[]{"","",""});
               model.addRow(new Object[]{"EXPENSE","",""});
                         
                         
                         
                
                  //stock expense
              if(stock==0 ||stocke==0){
                 st=(stock+stocke);
                  String ss=Double.toString(st);
                  model.addRow(new Object[]{"Stock Expense",ss,""});
              }else{
                   st=(stock+stocke)/2;
                  String ss=Double.toString(st);
                  model.addRow(new Object[]{"Stock Expense",ss,""});
              }

                
                
                //retailer damage
                 if(retDam==0 || retDame==0){
                     rett=(retDam+retDame);
                     String rt=Double.toString(rett);
                    model.addRow(new Object[]{"Retailer Damage",rt,""});
                 }else{
                       rett=(retDam+retDame)/2;
                     String rt=Double.toString(rett);
                     model.addRow(new Object[]{"Retailer Damage",rt,""});
                 }
                
                
               
                
                //salary
                if(salary==0 || salarye==0){
                    sall=(salary+salarye);
                    String ss=Double.toString(sall);
                    model.addRow(new Object[]{"Employee Salary",ss,""});
                }else{
                    sall=(salary+salarye)/2;  
                    String ss=Double.toString(sall);
                   model.addRow(new Object[]{"Employee Salary",ss,""});
                }
                //delivery
                if(deli==0 || delie==0){
                      del=(deli+delie);
                    String de=Double.toString(del);
                    model.addRow(new Object[]{"Delivery Payment",de,""});
                   
                }else{
                       del=(deli+delie)/2;
                    String de=Double.toString(del);
                   model.addRow(new Object[]{"Delivery Payment",de,""});
                }
               
                
                //electricity
                if(pcode==0 || pcodee==0){
                      elec=(pcode+pcodee);
                    String ele=Double.toString(elec);
                    
                }else{
                    elec=(pcode+pcodee)/2;
                    String ele=Double.toString(elec);
                   
                }
                
                //water
                if(pname==0 || pnamee==0){
                    wter=(pname+pnamee);
                    String wt=Double.toString(wter);
                    
                }else{
                    wter=(pname+pnamee)/2;
                    String wt=Double.toString(wter);
                   
                }
                
                //telephone
                if(pduration==0 || pduratione==0){
                   tel=(pduration+pduratione);
                    String te=Double.toString(tel);
                   
                }else{
                     tel=(pduration+pduratione)/2;
                    String te=Double.toString(tel);
                   
                }
                //rent
                if(semfee==0 ||semfeee==0){
                     rettt=(semfee+semfeee);
                    String re=Double.toString(rettt);
                    
                    
                }else{
                     rettt=(semfee+semfeee);
                    String re=Double.toString(rettt);
                    
                }
                double uti=rettt+tel+wter+elec;
                String Utilities=String.valueOf(uti);
                model.addRow(new Object[]{"Utilities",Utilities,""});
                
               //other expenses
                if(OthEx==0 || OthExe==0){
                    OE=(OthEx+OthExe);
                    String Othe=Double.toString(OE);
                    model.addRow(new Object[]{"Other Expenses",Othe,""});
                }else{
                     OE=(OthEx+OthExe)/2;
                    String Othe=Double.toString(OE);
                        model.addRow(new Object[]{"Other Expenses",Othe,""});
                }
                               
                               //  total expense
                    double expense=st+rett+OE+sall+del+elec+wter+tel+rettt;
                    String totExpense=Double.toString(expense);  
                      model.addRow(new Object[]{"Expected Total Expense","",totExpense});
                    //profit
                    double profit=income-expense;
                    String pro=Double.toString(profit);
                 model.addRow(new Object[]{"","",""});
                 model.addRow(new Object[]{"","",""});
                 model.addRow(new Object[]{"Expected Profit/Loss","",pro});

                    if(profit>0){
                       String value="(Profit)";
                        model.addRow(new Object[]{"Status","",value});
                    }else{
                      String value="(Loss)";
                        model.addRow(new Object[]{"Status","",value});  
                    }
//                    
                   
//             String Q= "INSERT INTO budget(year,month,elect,water,tele,rent,salary,ret_damage,stoc_expe,deliv,oth_exp,ret_inco,oth_inc,tot_income,tot_expense,balance) values ('"+str+"','"+moS+"',"+ elec+","+ wter+","+ tel+","+ rettt+","+ sall+","+rett+","+st+","+del+","+OE+","+retIncome+","+oi+","+income+","+expense+","+profit+")";
//             pst= conn.prepareStatement(Q);
//             pst.execute();
//                    System.out.println(Q);
//                         }
//               
                         } } catch (SQLException ex) {
                        Logger.getLogger(budget.class.getName()).log(Level.SEVERE, null, ex);
                   }
             
               
             
               
              
                  

                 

//                }

            }

        }}catch(Exception e){
            System.out.println(e);
        }
            }else{
                      try{
            String sql="SELECT elect,water,tele,rent,salary,ret_damage,stoc_expe,deliv,oth_exp,ret_inco,oth_inc FROM month_trans WHERE month='"+Str1+"' and year='"+str+"'";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            System.out.println(sql);

            while(rs.next()){
                double pcode=rs.getDouble("elect");
                double pname=rs.getDouble("water");
                double pduration=rs.getDouble("tele");
                double semfee=rs.getDouble("rent");
                double salary=rs.getDouble("salary");
                double retDam=rs.getDouble("ret_damage");
                double stock=rs.getDouble("stoc_expe");
                double deli=rs.getDouble("deliv");
                double OthEx=rs.getDouble("oth_exp");
                double retInc=rs.getDouble("ret_inco");
                double othInc=rs.getDouble("oth_inc");

                String sal=Double.toString(salary);
                String Retdma=Double.toString(retDam);
                String stoc=Double.toString(stock);
                String delivery=Double.toString(deli);
                String electricity=Double.toString(pcode);
                String water=Double.toString(pname);
                String tele=Double.toString(pduration);
                String rent=Double.toString(semfee);
                String expe=Double.toString(OthEx);
                String retIncc=Double.toString(retInc);
                String otheInc=Double.toString(othInc);
                
                
                String q="SELECT elect,water,tele,rent,salary,ret_damage,stoc_expe,deliv,oth_exp,ret_inco,oth_inc FROM month_trans WHERE month='"+Str2+"' and year='"+str+"'";
                pst=conn.prepareStatement(q);
                rs=pst.executeQuery();
              
                while(rs.next()){
                double pcodee=rs.getDouble("elect");
                double pnamee=rs.getDouble("water");
                double pduratione=rs.getDouble("tele");
                double semfeee=rs.getDouble("rent");
                double salarye=rs.getDouble("salary");
                double retDame=rs.getDouble("ret_damage");
                double stocke=rs.getDouble("stoc_expe");
                double delie=rs.getDouble("deliv");
                double OthExe=rs.getDouble("oth_exp");
                double retInce=rs.getDouble("ret_inco");
                double othInce=rs.getDouble("oth_inc");
                
                
                String sale=Double.toString(salary);
                String Retdmae=Double.toString(retDam);
                String stoce=Double.toString(stock);
                String deliverye=Double.toString(deli);
                String electricitye=Double.toString(pcode);
                String watere=Double.toString(pname);
                String telee=Double.toString(pduration);
                String rente=Double.toString(semfee);
                String expee=Double.toString(OthEx);
                String retIncce=Double.toString(retInc);
                String otheInce=Double.toString(othInc);
                   
              
                        double st=0;
                        double rett=0;
                        double OE=0;
                        double sall=0;
                        double del=0;
                        double elec=0;
                        double wter=0;
                        double tel=0;
                        double rettt=0;
                        
                     //income
                
                 DefaultTableModel model =(DefaultTableModel) jTable1.getModel();
                 model.addRow(new Object[]{"INCOME", "",""});
                 
                   double retIncome=0;
                   double oi=0;
                   
                 String aq="Select balance from month_trans where month='"+Str1+"' and year='"+str+"'";
                    
                    try {
                        pst=conn.prepareStatement(aq);
                        rs=pst.executeQuery();
                         while(rs.next()){
                              double bal=rs.getDouble("balance");
                              String balance=Double.toString(bal);
                            
                              model.addRow(new Object[]{"Balance", balance,""});
                //retailer income
                
                if(retInc==0 || retInce==0){
                    retIncome=(retInc+retInce);
                    String ri=Double.toString(retIncome);
                     model.addRow(new Object[]{"Retailer Income",ri,""});
                }else{
                    retIncome=(retInc+retInce)/2;
                    String ri=Double.toString(retIncome);
                    model.addRow(new Object[]{"Retailer Income",ri,""});
                }
                //other income
                
                if(othInc==0 || othInce==0){
                    oi=(othInc+othInce);
                    String In=Double.toString(oi);
                    model.addRow(new Object[]{"Other Income",In,""});
                }else{
                    oi=(othInc+othInce)/2;
                    String In=Double.toString(oi);
                    model.addRow(new Object[]{"Other Income",In,""});
                }
                
                
               
                              
                              
                 
                  

                    //total income
                    double income=retIncome+oi+bal;
                    String totIncome=Double.toString(income);
               model.addRow(new Object[]{"Expected Total Income","",totIncome});
               model.addRow(new Object[]{"","",""});
               model.addRow(new Object[]{"","",""});
               model.addRow(new Object[]{"EXPENSE","",""});
                         
                         
                         
                
                  //stock expense
              if(stock==0 ||stocke==0){
                 st=(stock+stocke);
                  String ss=Double.toString(st);
                  model.addRow(new Object[]{"Stock Expense",ss,""});
              }else{
                   st=(stock+stocke)/2;
                  String ss=Double.toString(st);
                  model.addRow(new Object[]{"Stock Expense",ss,""});
              }

                
                
                //retailer damage
                 if(retDam==0 || retDame==0){
                     rett=(retDam+retDame);
                     String rt=Double.toString(rett);
                    model.addRow(new Object[]{"Retailer Damage",rt,""});
                 }else{
                       rett=(retDam+retDame)/2;
                     String rt=Double.toString(rett);
                     model.addRow(new Object[]{"Retailer Damage",rt,""});
                 }
                
                
               
                
                //salary
                if(salary==0 || salarye==0){
                    sall=(salary+salarye);
                    String ss=Double.toString(sall);
                    model.addRow(new Object[]{"Employee Salary",ss,""});
                }else{
                    sall=(salary+salarye)/2;  
                    String ss=Double.toString(sall);
                   model.addRow(new Object[]{"Employee Salary",ss,""});
                }
                //delivery
                if(deli==0 || delie==0){
                      del=(deli+delie);
                    String de=Double.toString(del);
                    model.addRow(new Object[]{"Delivery Payment",de,""});
                   
                }else{
                       del=(deli+delie)/2;
                    String de=Double.toString(del);
                   model.addRow(new Object[]{"Delivery Payment",de,""});
                }
               
                
                //electricity
                if(pcode==0 || pcodee==0){
                      elec=(pcode+pcodee);
                    String ele=Double.toString(elec);
                    
                }else{
                    elec=(pcode+pcodee)/2;
                    String ele=Double.toString(elec);
                   
                }
                
                //water
                if(pname==0 || pnamee==0){
                    wter=(pname+pnamee);
                    String wt=Double.toString(wter);
                    
                }else{
                    wter=(pname+pnamee)/2;
                    String wt=Double.toString(wter);
                   
                }
                
                //telephone
                if(pduration==0 || pduratione==0){
                   tel=(pduration+pduratione);
                    String te=Double.toString(tel);
                   
                }else{
                     tel=(pduration+pduratione)/2;
                    String te=Double.toString(tel);
                   
                }
                //rent
                if(semfee==0 ||semfeee==0){
                     rettt=(semfee+semfeee);
                    String re=Double.toString(rettt);
                    
                    
                }else{
                     rettt=(semfee+semfeee);
                    String re=Double.toString(rettt);
                    
                }
                double uti=rettt+tel+wter+elec;
                String Utilities=String.valueOf(uti);
                model.addRow(new Object[]{"Utilities",Utilities,""});
                
               //other expenses
                if(OthEx==0 || OthExe==0){
                    OE=(OthEx+OthExe);
                    String Othe=Double.toString(OE);
                    model.addRow(new Object[]{"Other Expenses",Othe,""});
                }else{
                     OE=(OthEx+OthExe)/2;
                    String Othe=Double.toString(OE);
                        model.addRow(new Object[]{"Other Expenses",Othe,""});
                }
                               
                               //  total expense
                    double expense=st+rett+OE+sall+del+elec+wter+tel+rettt;
                    String totExpense=Double.toString(expense);  
                      model.addRow(new Object[]{"Expected Total Expense","",totExpense});
                    //profit
                    double profit=income-expense;
                    String pro=Double.toString(profit);
                 model.addRow(new Object[]{"","",""});
                 model.addRow(new Object[]{"","",""});
                 model.addRow(new Object[]{"Expected Profit/Loss","",pro});

                    if(profit>0){
                       String value="(Profit)";
                        model.addRow(new Object[]{"Status","",value});
                    }else{
                      String value="(Loss)";
                        model.addRow(new Object[]{"Status","",value});  
                    }
//                    
                   
//             String Q= "INSERT INTO budget(year,month,elect,water,tele,rent,salary,ret_damage,stoc_expe,deliv,oth_exp,ret_inco,oth_inc,tot_income,tot_expense,balance) values ('"+str+"','"+moS+"',"+ elec+","+ wter+","+ tel+","+ rettt+","+ sall+","+rett+","+st+","+del+","+OE+","+retIncome+","+oi+","+income+","+expense+","+profit+")";
//             pst= conn.prepareStatement(Q);
//             pst.execute();
//                    System.out.println(Q);
//                         }
//               
                         } } catch (SQLException ex) {
                        Logger.getLogger(budget.class.getName()).log(Level.SEVERE, null, ex);
                   }
             
               
             
               
              
                  

                 

//                }

            }

        }}catch(Exception e){
            System.out.println(e);
        }
            }
            
         
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private com.toedter.calendar.JMonthChooser jMonthChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    // End of variables declaration//GEN-END:variables
}
