/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interf;

import code.DBconnect;
import code.product_1;
import code.stock_1;
import code.validate_1;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;
import java.util.Date;

/**
 *
 * @author HARIpc
 */
public class stock extends javax.swing.JPanel {

    Connection con=null;
    PreparedStatement pst=null;
    PreparedStatement pst1=null;
    PreparedStatement pst2=null;
    ResultSet rs = null;
    ResultSet rs1 = null;
    ResultSet rs2 = null;
    
    public String stock_id;
    
    public stock() {
        initComponents();
        
        con = DBconnect.connect();
        tableload(); 
       fillProductCombo();
        
      
        product_name7.disable();
        quantity.disable();
        size.disable();
        storage_location.disable();
        description.disable();
    }
    
     public void tableload(){
        
        try{
        String sql = "SELECT stoc_id as 'Stock ID',prod_id as 'Product ID',size_1 as 'Size',prod_name as 'Product Name',quantity as 'Quantity',rece_date as 'Received',expi_date as 'Expiary',desc_1 as 'Description',stor_location as 'Storage Location'  FROM stock";
        pst = con.prepareStatement(sql);
        rs =pst.executeQuery(sql);
        jTable1.setModel(DbUtils.resultSetToTableModel(rs));
        
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,e);
    }
    }
    
     
     public void genStockID()
           {
        try{
            String qry="SELECT stoc_id FROM stock ORDER BY stoc_id DESC LIMIT 1";
            pst=con.prepareStatement(qry);
            rs=pst.executeQuery();
            if(rs.next())
            {
                String r1=rs.getString("stoc_id");
                int ln=r1.length();
                String stxt=r1.substring(0,3);
                String snum=r1.substring(3,ln);
                int n=Integer.parseInt(snum);
                n++;
                snum=Integer.toString(n);
                
             stock_id=stxt+snum;
                
            }
            else
            {
             stock_id= "stc123";
            }
            }
        
        catch(Exception e){
    
        JOptionPane.showMessageDialog(null,e);
    }
        
    }
   
    public void fillProductCombo()
    {
        
        try
        { 
        
            //product_name.removeAllItems();
            String sql="SELECT DISTINCT prod_name FROM product";
            pst1 = con.prepareStatement(sql);
            rs1 = pst1.executeQuery();
            
            product_name7.removeAllItems();
            while(rs1.next())
            {
              
                String comboitems=rs1.getString("prod_name");
                product_name7.addItem(comboitems);
            }
        }
        catch(Exception e)
        {
            
        }
        
       
    }
    
   public void fillProductIDCombo()
     {
         String name=product_name7.getSelectedItem().toString();
         String size1=size.getSelectedItem().toString();
         try
         {
             String sql="select prod_id from product where prod_name='"+name+"' and size_1='"+size1+"' ";
             pst = con.prepareStatement(sql);
             rs = pst.executeQuery();
             
             if(rs.next())
            {
                String add1=rs.getString("prod_id");
                product_ID.setText(add1);

            }
         }
         
         catch(Exception e)
        {
            
        }
     }
   
   public void fillSizeCombo()
    {
        try
        {
            //size.removeAllItems();
            String name=product_name7.getSelectedItem().toString();
            String sql="select distinct size_1 from product where prod_name='"+name+"' ";
            pst2 = con.prepareStatement(sql);
            rs2 = pst2.executeQuery();
            
            size.removeAllItems();
            while(rs2.next())
            {
                String comboitems=rs2.getString("size_1");
                size.addItem(comboitems);
            }
        }
        catch(Exception e)
        {
            
        }
        
       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        expiary_date = new com.toedter.calendar.JDateChooser();
        received_date = new com.toedter.calendar.JDateChooser();
        stock_ID = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        description = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        product_ID = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        storage_location = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        product_name_label = new javax.swing.JLabel();
        quantity_label = new javax.swing.JLabel();
        size_label = new javax.swing.JLabel();
        storage_location_label = new javax.swing.JLabel();
        received_date_label = new javax.swing.JLabel();
        expiary_date_label = new javax.swing.JLabel();
        product_name7 = new javax.swing.JComboBox<>();
        size = new javax.swing.JComboBox<>();

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Stock Details");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(360, 0, 190, 36);

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Stock ID");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(110, 90, 90, 30);

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Product ID");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(460, 90, 80, 30);

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Product Name");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(110, 150, 110, 30);

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Quantity");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(110, 270, 80, 30);

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Description");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(320, 330, 90, 30);

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Received Date");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(110, 210, 120, 30);

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Expiary Date");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(460, 210, 120, 30);

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Storage Location");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(460, 270, 130, 30);

        jTable1.setBackground(new java.awt.Color(51, 51, 51));
        jTable1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 420, 830, 110);

        expiary_date.setDateFormatString("yyyy-MM-dd");
        jPanel1.add(expiary_date);
        expiary_date.setBounds(590, 210, 160, 30);

        received_date.setDateFormatString("yyyy-MM-dd");
        jPanel1.add(received_date);
        received_date.setBounds(230, 210, 170, 30);

        stock_ID.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        stock_ID.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(stock_ID);
        stock_ID.setBounds(230, 90, 160, 30);

        quantity.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jPanel1.add(quantity);
        quantity.setBounds(230, 270, 170, 30);

        description.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jPanel1.add(description);
        description.setBounds(410, 330, 160, 30);

        jButton1.setBackground(new java.awt.Color(51, 51, 51));
        jButton1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/new-file-icon.png"))); // NOI18N
        jButton1.setText("New");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(210, 370, 150, 40);

        jButton3.setBackground(new java.awt.Color(51, 51, 51));
        jButton3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit-validated-icon (1).png"))); // NOI18N
        jButton3.setText("Submit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(370, 370, 150, 40);

        product_ID.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        product_ID.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(product_ID);
        product_ID.setBounds(590, 90, 160, 30);

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Size");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(460, 150, 60, 30);

        storage_location.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        storage_location.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "rack1", "rack2", "rack3", "rack4", "rack5", " " }));
        jPanel1.add(storage_location);
        storage_location.setBounds(590, 270, 160, 30);

        jLabel11.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Search");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(310, 50, 60, 30);

        search.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });
        jPanel1.add(search);
        search.setBounds(370, 50, 200, 29);

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Actions-edit-delete-icon.png"))); // NOI18N
        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(530, 370, 150, 40);

        product_name_label.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        product_name_label.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(product_name_label);
        product_name_label.setBounds(230, 180, 160, 30);

        quantity_label.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        quantity_label.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(quantity_label);
        quantity_label.setBounds(230, 300, 160, 30);

        size_label.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        size_label.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(size_label);
        size_label.setBounds(590, 180, 160, 30);

        storage_location_label.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        storage_location_label.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(storage_location_label);
        storage_location_label.setBounds(590, 300, 210, 30);

        received_date_label.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        received_date_label.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(received_date_label);
        received_date_label.setBounds(230, 240, 160, 30);

        expiary_date_label.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        expiary_date_label.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(expiary_date_label);
        expiary_date_label.setBounds(590, 240, 170, 30);

        product_name7.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        product_name7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        product_name7.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                product_name7ItemStateChanged(evt);
            }
        });
        product_name7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                product_name7FocusGained(evt);
            }
        });
        product_name7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_name7ActionPerformed(evt);
            }
        });
        jPanel1.add(product_name7);
        product_name7.setBounds(230, 150, 170, 30);

        size.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        size.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        size.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sizeItemStateChanged(evt);
            }
        });
        size.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeActionPerformed(evt);
            }
        });
        jPanel1.add(size);
        size.setBounds(590, 150, 160, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 850, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        product_name7.enable();
        quantity.enable();
        size.enable();
        storage_location.enable();
        description.enable();
        
        stock_ID.setText("");
        product_ID.setText("");
       // size.setSelectedIndex(0);
       // product_name.setSelectedIndex(0);
        quantity.setText("");
        received_date.setDate(null);
        expiary_date.setDate(null);
        description.setText("");
       // storage_location.setSelectedIndex(0);
        
        product_name_label.setText("");
        quantity_label.setText("");
        size_label.setText("");
        storage_location_label.setText("");
        

        genStockID();

        stock_ID.setText(stock_id);
        
       
        
        
                
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        boolean quantity2;
        int count=0;
        
        validate_1 v1=new validate_1();
        quantity2=v1.numcheck(quantity.getText());
        
        int a=product_name7.getSelectedItem().toString().compareTo("Select");
        if(a==1)
        {
            product_name_label.setText("*Select a Product");
            count++;
        }
        
        
        if(quantity.getText().isEmpty())
         {
              quantity_label.setText("*Required field");
              count++;
         }
        
        if(received_date.getDate()== null)
         {
              received_date_label.setText("*Select a Date");
              count++;
         }
        
        if(expiary_date.getDate()== null)
         {
              expiary_date_label.setText("*Select a Date");
              count++;
         }
        
        int b=size.getSelectedItem().toString().compareTo("Select");
        if(a==1)
        {
            size_label.setText("*Select a Size");
            count++;
        }
        
        int c=storage_location.getSelectedItem().toString().compareTo("Select");
        if(a==1)
        {
            storage_location_label.setText("*Select a Storage Location");
            count++;
        }
        
        if(quantity2==false)
        {
              quantity_label.setText("*Insert only Numerics");
              count++;
        }
        
        if (count==0)
        {
         stock_1 a2=new stock_1();
         
         a2.setStockID(stock_ID.getText());
         a2.setProductID(product_ID.getText());
         a2.setSize(size.getSelectedItem().toString());
         a2.setProductName(product_name7.getSelectedItem().toString());
         a2.setQuantity(Integer.parseInt(quantity.getText().trim()));
         a2.setReceivedDate(received_date.getDate());
         a2.setExpiaryDate(expiary_date.getDate());
         a2.setDescription(description.getText());
         a2.setStorageLocation(storage_location.getSelectedItem().toString());
         
         
         a2.product();
         
         a2.storeDB();
         tableload();
         
        }
         
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        product_name7.enable();
        quantity.enable();
        size.enable();
        storage_location.enable();
        description.enable();
               
        int r = jTable1.getSelectedRow();

        String stock_id = jTable1.getValueAt(r ,0).toString();
        String product_id=jTable1.getValueAt(r,1).toString();
        String size1 = jTable1.getValueAt(r ,2).toString();
        String product_name1 = jTable1.getValueAt(r ,3).toString();
        String quantity1=jTable1.getValueAt(r,4).toString();
        String received_date = jTable1.getValueAt(r ,5).toString();
        String expiary_date = jTable1.getValueAt(r ,6).toString();
        String description1=jTable1.getValueAt(r,7).toString();
        String storage_location1 = jTable1.getValueAt(r ,8).toString();
        
        
        
        stock_ID.setText(stock_id);
        product_ID.setText(product_id);
        product_name7.setSelectedItem(product_name1);
        size.setSelectedItem(size1);
        quantity.setText(quantity1);
        description.setText(description1);
        storage_location.setSelectedItem(storage_location1);
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
       
        DefaultTableModel table=(DefaultTableModel)jTable1.getModel();
        String search1 = search.getText();
        TableRowSorter<DefaultTableModel> tr= new TableRowSorter<DefaultTableModel>(table);
        jTable1.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search1));
    }//GEN-LAST:event_searchKeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        int rowno=jTable1.getSelectedRow();
        
        if(rowno==-1)
        {
            JOptionPane.showMessageDialog(null,"Please Select a row to Delete");
        }
        
        else{
            
        
        String sql= "delete from stock where stoc_id=?";
        try{
        
        pst=con.prepareStatement(sql);
        
        pst.setString(1,stock_ID.getText());
        
        pst.execute();
        JOptionPane.showMessageDialog(null,"Deleted");
        
    
    }catch(Exception e){
    
        JOptionPane.showMessageDialog(null,e);
    }
        }
    tableload(); //update table
                                  
                                          
    }//GEN-LAST:event_jButton2ActionPerformed

    private void product_name7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_name7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_product_name7ActionPerformed

    private void product_name7ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_product_name7ItemStateChanged
        
        fillSizeCombo();
    }//GEN-LAST:event_product_name7ItemStateChanged

    private void sizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sizeActionPerformed

    private void sizeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sizeItemStateChanged
        
        fillProductIDCombo();
    }//GEN-LAST:event_sizeItemStateChanged

    private void product_name7FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_product_name7FocusGained
        
         
    }//GEN-LAST:event_product_name7FocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField description;
    private com.toedter.calendar.JDateChooser expiary_date;
    private javax.swing.JLabel expiary_date_label;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel product_ID;
    private javax.swing.JComboBox<String> product_name7;
    private javax.swing.JLabel product_name_label;
    private javax.swing.JTextField quantity;
    private javax.swing.JLabel quantity_label;
    private com.toedter.calendar.JDateChooser received_date;
    private javax.swing.JLabel received_date_label;
    private javax.swing.JTextField search;
    private javax.swing.JComboBox<String> size;
    private javax.swing.JLabel size_label;
    private javax.swing.JLabel stock_ID;
    private javax.swing.JComboBox<String> storage_location;
    private javax.swing.JLabel storage_location_label;
    // End of variables declaration//GEN-END:variables
}
