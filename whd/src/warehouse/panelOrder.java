
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package warehouse;
import Class.Orders;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import interf.reorder;

/**
 *
 * @author Mudara Bandaranayake
 */
public class panelOrder extends javax.swing.JPanel {
    
    /**
     * Creates new form panelOrder
     */
    DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
    Date currentdate = new Date();
    public panelOrder() {
        initComponents();
        Orders order=new Orders();
        ResultSet result=order.getOrders();
        try{
        while(result.next()){
                String ordid=result.getString("ord_id");
                OrderCombo.addItem(ordid);
            }
        }
        catch(Exception e){
           System.out.println(e); 
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        orderidLabel = new javax.swing.JLabel();
        displaytotLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        productsArea = new javax.swing.JTextArea();
        totalLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        OrderCombo = new javax.swing.JComboBox<>();
        generateBtn = new javax.swing.JButton();
        checkBtn = new javax.swing.JButton();
        resetordBtn1 = new javax.swing.JButton();
        RemoveordBtn = new javax.swing.JButton();
        ReorderBtn = new javax.swing.JButton();
        OPLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));
        setForeground(new java.awt.Color(51, 51, 51));

        jTable1.setBackground(new java.awt.Color(51, 51, 51));
        jTable1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "OrderID", "SupplierID", "RetailerID", "ProductName", "UnitPrice", "Quantity", "Category", "Order Date", "DeliveryDate"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setPreferredSize(new java.awt.Dimension(600, 300));

        orderidLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        orderidLabel.setForeground(new java.awt.Color(255, 255, 255));
        orderidLabel.setText("Order ID :");

        displaytotLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        displaytotLabel.setForeground(new java.awt.Color(255, 255, 255));

        productsArea.setBackground(new java.awt.Color(45, 45, 45));
        productsArea.setColumns(20);
        productsArea.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        productsArea.setForeground(new java.awt.Color(255, 255, 255));
        productsArea.setRows(5);
        productsArea.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Availability", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        productsArea.setPreferredSize(new java.awt.Dimension(400, 149));
        jScrollPane3.setViewportView(productsArea);

        totalLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        totalLabel.setForeground(new java.awt.Color(255, 255, 255));
        totalLabel.setText("Total :");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));

        OrderCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                OrderComboItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(271, 271, 271))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(orderidLabel)
                        .addGap(18, 18, 18)
                        .addComponent(OrderCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(totalLabel)
                        .addGap(18, 18, 18)))
                .addComponent(displaytotLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OrderCombo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(orderidLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(totalLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displaytotLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addContainerGap())
        );

        generateBtn.setBackground(new java.awt.Color(51, 51, 51));
        generateBtn.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        generateBtn.setForeground(new java.awt.Color(255, 255, 255));
        generateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/d.png"))); // NOI18N
        generateBtn.setText("Generate PO");
        generateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateBtnActionPerformed(evt);
            }
        });

        checkBtn.setBackground(new java.awt.Color(51, 51, 51));
        checkBtn.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        checkBtn.setForeground(new java.awt.Color(255, 255, 255));
        checkBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Checked Checkbox_48px.png"))); // NOI18N
        checkBtn.setText("Check");
        checkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBtnActionPerformed(evt);
            }
        });

        resetordBtn1.setBackground(new java.awt.Color(51, 51, 51));
        resetordBtn1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        resetordBtn1.setForeground(new java.awt.Color(255, 255, 255));
        resetordBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Actions-edit-undo-icon.png"))); // NOI18N
        resetordBtn1.setText("Reset");
        resetordBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetordBtn1ActionPerformed(evt);
            }
        });

        RemoveordBtn.setBackground(new java.awt.Color(51, 51, 51));
        RemoveordBtn.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        RemoveordBtn.setForeground(new java.awt.Color(255, 255, 255));
        RemoveordBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Actions-edit-delete-icon.png"))); // NOI18N
        RemoveordBtn.setText("Remove");
        RemoveordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveordBtnActionPerformed(evt);
            }
        });

        ReorderBtn.setBackground(new java.awt.Color(51, 51, 51));
        ReorderBtn.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        ReorderBtn.setForeground(new java.awt.Color(255, 255, 255));
        ReorderBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Checked Checkbox_48px.png"))); // NOI18N
        ReorderBtn.setText("Reorder");
        ReorderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReorderBtnActionPerformed(evt);
            }
        });

        OPLabel.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        OPLabel.setForeground(new java.awt.Color(255, 255, 255));
        OPLabel.setText("Order Processing");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ReorderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(generateBtn)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(RemoveordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(92, 92, 92)
                                .addComponent(resetordBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(114, 114, 114))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 832, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(333, 333, 333)
                .addComponent(OPLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(OPLabel)
                .addGap(13, 13, 13)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(generateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ReorderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RemoveordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(resetordBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void generateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateBtnActionPerformed
        Orders order=new Orders();
        order.updateOrderstatus((String) OrderCombo.getSelectedItem());
        ResultSet result=order.checkAvailability((String) OrderCombo.getSelectedItem());
            try {
                while(result.next()){
                    String prodid=result.getString("o.prod_id");
                    order.updateReorder(prodid,(String) OrderCombo.getSelectedItem());
                }
            } catch (SQLException ex) {
                Logger.getLogger(panelOrder.class.getName()).log(Level.SEVERE, null, ex);
            }
        ResultSet result1=order.calculatePayment((String) OrderCombo.getSelectedItem());
        productsArea.setText("");
        try {
            while(result1.next()){
                String amount=result1.getString("SUM(total)");
                displaytotLabel.setText(amount);
            }
        } catch (SQLException ex) {
            Logger.getLogger(panelSupplier.class.getName()).log(Level.SEVERE, null, ex);
        }
        ResultSet result2=order.generatePo((String) OrderCombo.getSelectedItem());
        try{
            Document document=new Document();
            PdfWriter myOrder=PdfWriter.getInstance(document,new FileOutputStream("Order.pdf"));
            myOrder.setSpaceCharRatio(PdfWriter.NO_SPACE_CHAR_RATIO);
            document.open();
            Paragraph orderid=new Paragraph("Order Number :  "+(String) OrderCombo.getSelectedItem());
            orderid.setAlignment(Paragraph.ALIGN_RIGHT);
            orderid.setSpacingAfter(50);
            document.add(orderid);
            ResultSet result3=order.findSupplier((String) OrderCombo.getSelectedItem());
             try {
                while(result3.next()){
                String suppaddress=result3.getString("supp_address");
                String compname=result3.getString("comp_name");
                productsArea.append("\t"+"\t"+compname+"\t"+"\t"+" \n "+"\t"+"\t"+suppaddress+"\t"+"\t"+"\n");
                Paragraph supplier=new Paragraph(compname+"\n"+suppaddress+"\n");
                supplier.setAlignment(Paragraph.ALIGN_CENTER);
                supplier.setSpacingAfter(50);
                document.add(supplier);
                }   
        }catch (SQLException ex) {
            Logger.getLogger(panelSupplier.class.getName()).log(Level.SEVERE, null, ex);
        }
            PdfPTable table = new PdfPTable(6);
                        table.setWidths(new int[]{ 3,3,3,3,3,3});
                        PdfPCell cell;
                        cell = new PdfPCell(new Phrase("ProductID"));
                        cell.setRowspan(2);
                        table.addCell(cell);
                        cell = new PdfPCell(new Phrase("ProductName"));
                        cell.setRowspan(2);
                        table.addCell(cell);
                        cell = new PdfPCell(new Phrase("MRP"));
                        cell.setRowspan(2);
                        table.addCell(cell);
                        cell = new PdfPCell(new Phrase("Quantity"));
                        cell.setRowspan(2);
                        table.addCell(cell);
                        cell = new PdfPCell(new Phrase("Price"));
                        cell.setRowspan(2);
                        table.addCell(cell);
                        cell = new PdfPCell(new Phrase("Total"));
                        cell.setRowspan(2);
                        table.addCell(cell);
                     productsArea.append("ProductID \t ProductName \t MRP \t Quantity \t Price \t Total \n");   
                    try {
                        while(result2.next()){
                        String prodid=result2.getString("prod_id");
                        String prodname=result2.getString("prod_name");
                        String maxprice=result2.getString("mrp");
                        String qty=result2.getString("qty");
                        String sellprice=result2.getString("sell_price");
                        String total=result2.getString("Total");
                        productsArea.append(prodid+"\t"+prodname+"\t"+maxprice+"\t"+qty+"\t"+sellprice+"\t"+total+"\n");
                        cell = new PdfPCell(new Phrase(prodid));
                        cell.setRowspan(2);
                        table.addCell(cell);
                        cell = new PdfPCell(new Phrase(prodname));
                        cell.setRowspan(2);
                        table.addCell(cell);
                        cell = new PdfPCell(new Phrase(maxprice));
                        cell.setRowspan(2);
                        table.addCell(cell);
                        cell = new PdfPCell(new Phrase(qty));
                        cell.setRowspan(2);
                        table.addCell(cell);
                        cell = new PdfPCell(new Phrase(sellprice));
                        cell.setRowspan(2);
                        table.addCell(cell);
                        cell = new PdfPCell(new Phrase(total));
                        cell.setRowspan(2);
                        table.addCell(cell);
                }
                        document.add(table);
        }catch (SQLException ex) {
            Logger.getLogger(panelSupplier.class.getName()).log(Level.SEVERE, null, ex);
        }
            Paragraph total=new Paragraph("Total  :  "+displaytotLabel.getText());
            total.setAlignment(Paragraph.ALIGN_RIGHT);
            total.setSpacingAfter(50);
            document.add(total); 
            document.close();
            JOptionPane.showMessageDialog(null,"Purchase Order Generated.","Action Successful",
            JOptionPane.PLAIN_MESSAGE);
        
        } catch (DocumentException ex) {
            Logger.getLogger(panelOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (FileNotFoundException ex) {
                Logger.getLogger(panelOrder.class.getName()).log(Level.SEVERE, null, ex);
            }
       ResultSet result6=order.getAvailable((String) OrderCombo.getSelectedItem());
            try {
                while(result6.next()){
                    String prodid=result6.getString("o.prod_id");
                    order.reduceInventory((String) OrderCombo.getSelectedItem(),prodid);
                }    } catch (SQLException ex) {
                Logger.getLogger(panelOrder.class.getName()).log(Level.SEVERE, null, ex);
            }
        ResultSet result4=order.checkReorder((String) OrderCombo.getSelectedItem());
        try {
            while(result4.next()){
                String prodid=result4.getString("o.prod_id");
                int period=order.checkReorderdate(prodid,currentdate);
                String prodname=result4.getString("o.prod_name");
                int rol=result4.getInt("p.rol");
                String size=result4.getString("p.size_1");
                String suppid=result4.getString("p.supp_id");
                String compname=result4.getString("p.comp_name");
                if(period>=15){
                reorder r=new reorder();
                r.genReorderID();
                order.insertReorder(r.reorder_id,prodid,prodname,rol,size,suppid,compname,currentdate);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(panelOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
        order.insertOrderdetails((String) OrderCombo.getSelectedItem(),Double.parseDouble(displaytotLabel.getText()));
        ResultSet result5=order.search((String) OrderCombo.getSelectedItem());
        try {
            jTable1.setModel(DbUtils.resultSetToTableModel(result5));
           }
        catch (Exception ex) {
            Logger.getLogger(panelSupplier.class.getName()).log(Level.SEVERE, null, ex);
        }
        generateBtn.setEnabled(false);
        jLabel1.setText("Click on reset button.");
    }//GEN-LAST:event_generateBtnActionPerformed

    private void checkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBtnActionPerformed
        // TODO add your handling code here:
        productsArea.setText("");
        Orders order=new Orders();
        ResultSet result=order.checkAvailability((String) OrderCombo.getSelectedItem());
        try {
               if (!result.isBeforeFirst() ) {    
                productsArea.append("All Products are Available.");
               }
               else{     
                productsArea.append("Below Products Are Not Available.\n");
                productsArea.append("ProductID \tProductName \tQuantity \tAvailable \n");
                while(result.next()){
                String prodid=result.getString("o.prod_id");
                String prodname=result.getString("o.prod_name");
                String qty=result.getString("o.qty");
                String pquantity=result.getString("p.quantity");
                productsArea.append(prodid+"\t"+prodname+"\t"+qty+"\t"+pquantity+"\n");
                }
           }  
        }catch (SQLException ex) {
            Logger.getLogger(panelSupplier.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }//GEN-LAST:event_checkBtnActionPerformed

    private void resetordBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetordBtn1ActionPerformed
        // TODO add your handling code here:
                Orders order=new Orders();
                OrderCombo.removeAllItems();
                ResultSet result3=order.getOrders();
                try{
                 while(result3.next()){
                String ordid=result3.getString("ord_id");
                OrderCombo.addItem(ordid);
                }
            }
            catch(Exception e){
            
            } 
                displaytotLabel.setText("");
                jLabel1.setText("");
                productsArea.setText("");
                generateBtn.setEnabled(true);
    }//GEN-LAST:event_resetordBtn1ActionPerformed

    private void RemoveordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveordBtnActionPerformed
        // TODO add your handling code here:
        Orders order=new Orders();
        int n = JOptionPane.showConfirmDialog(
                            null, "Are You Sure You Want To Delete?",
                            "Delete?",
                            JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
        order.removeOrder((String)OrderCombo.getSelectedItem());
        OrderCombo.removeAllItems();
        ResultSet result=order.getOrders();
        try{
            while(result.next()){
                String ordid=result.getString("ord_id");
                OrderCombo.addItem(ordid);
             }
        }
        catch(Exception e){
             System.out.println(e);           
        }
        }
        else{
            JOptionPane.showMessageDialog(null,"Record Not Removed.","Action Successful",
            JOptionPane.PLAIN_MESSAGE);         
        }
        ResultSet result=order.searchAll();
        try {
                jTable1.setModel(DbUtils.resultSetToTableModel(result));
            }
        catch (Exception ex) {
            Logger.getLogger(panelSupplier.class.getName()).log(Level.SEVERE, null, ex);
        }
         
    }//GEN-LAST:event_RemoveordBtnActionPerformed

    private void OrderComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_OrderComboItemStateChanged
        // TODO add your handling code here:
        Orders order=new Orders();
        ResultSet result=order.search((String) OrderCombo.getSelectedItem());
        try {
                jTable1.setModel(DbUtils.resultSetToTableModel(result));
            }
        catch (Exception ex) {
            Logger.getLogger(panelSupplier.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_OrderComboItemStateChanged

    private void ReorderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReorderBtnActionPerformed
        // TODO add your handling code here:
        Orders order=new Orders();
        ResultSet result=order.checkAvailability((String) OrderCombo.getSelectedItem());
        try {
                while(result.next()){
                String prodid=result.getString("o.prod_id");
                int period=order.checkReorderdate(prodid,currentdate);
                String prodname=result.getString("o.prod_name");
                int rol=result.getInt("p.rol");
                String size=result.getString("p.size_1");
                String suppid=result.getString("p.supp_id");
                String compname=result.getString("p.comp_name");
                if(period>=15){
                reorder r=new reorder();
                r.genReorderID();
                order.insertReorder(r.reorder_id,prodid,prodname,rol,size,suppid,compname,currentdate);
                }
                else{
                    JOptionPane.showMessageDialog(null,"Re Order entry for  "+prodname+"  already exists.","Action Successful",
                    JOptionPane.PLAIN_MESSAGE);
                }
                order.updateReorder(prodid,(String) OrderCombo.getSelectedItem());
                }
        } catch (SQLException ex) {
            Logger.getLogger(panelOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ReorderBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel OPLabel;
    private javax.swing.JComboBox<String> OrderCombo;
    private javax.swing.JButton RemoveordBtn;
    private javax.swing.JButton ReorderBtn;
    private javax.swing.JButton checkBtn;
    private javax.swing.JLabel displaytotLabel;
    private javax.swing.JButton generateBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel orderidLabel;
    private javax.swing.JTextArea productsArea;
    private javax.swing.JButton resetordBtn1;
    private javax.swing.JLabel totalLabel;
    // End of variables declaration//GEN-END:variables
}
