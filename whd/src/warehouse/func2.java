/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package warehouse;

import codes.*;
import net.proteanit.sql.DbUtils;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.*;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.view.JasperViewer;

public class func2 extends javax.swing.JPanel {

    Connection con = null;
    ResultSet rs = null;
    PreparedStatement ps = null;
    
    String globaltruckno;
    String globaltruckcap;
    String globaldelstatus;
    
    
    
    public func2() {
        initComponents();
        
        con = dbconnect.connect();
        
        viewdelivery();
        
        fillinchargecombo2();
        filltrucknocombo2();
        
        truckvalid.setVisible(false);
        inchvalid.setVisible(false);
        datevalid.setVisible(false);
        
        
    }

    
    private void viewdelivery(){
       
        try{
            String sql = "Select deliveryid as 'Order ID', deliverystatus as 'Status', deliveryduedate as 'Due date', deliverydate as 'Delivery date'  from delivery";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery(sql);
            deliverytable.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error connecting to Delivery table");
        }
        
        
        
    }
    
    
    private void fillinchargecombo2(){
    
    try{
        String sql = "select emp_id from employee where task = 'driver'";
        ps = con.prepareStatement(sql);
        rs = ps.executeQuery(sql);
        
        while(rs.next())
        {
            String comboitems = rs.getString("emp_id");
            inchargecombo2.addItem(comboitems);
        }
        
    }
    
    catch(Exception e)
    {
        JOptionPane.showMessageDialog(null,"Error getting empid from DB");
    }
    
}
    
    
    private void filltrucknocombo2(){
        
        try{
            String sql = "select truckno from truck where availability = 'available'";
            ps =con.prepareStatement(sql);
            rs = ps.executeQuery(sql);
            
            while(rs.next())
            {
                String comboitems = rs.getString("truckno");
                trucknocombo2.addItem(comboitems);
            }
        }
        
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error getting truck no from DB");
        }
        
        
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        deliverytable = new javax.swing.JTable();
        orderidlabel = new javax.swing.JLabel();
        orderidvalue = new javax.swing.JLabel();
        retailerlabel = new javax.swing.JLabel();
        retnameval = new javax.swing.JLabel();
        deliverydatelabel = new javax.swing.JLabel();
        searchbyretail7 = new javax.swing.JLabel();
        retailerlabel1 = new javax.swing.JLabel();
        retailerlabel2 = new javax.swing.JLabel();
        trucknocombo2 = new javax.swing.JComboBox<>();
        inchargecombo2 = new javax.swing.JComboBox<>();
        deldate = new com.toedter.calendar.JDateChooser();
        deliverystats = new javax.swing.JComboBox<>();
        delduedate = new javax.swing.JLabel();
        duedateval = new javax.swing.JLabel();
        truckvalid = new javax.swing.JLabel();
        inchvalid = new javax.swing.JLabel();
        datevalid = new javax.swing.JLabel();
        retlocation = new javax.swing.JLabel();
        retlocval = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayitems = new javax.swing.JTextArea();
        itemlist2 = new javax.swing.JLabel();
        dispatch = new javax.swing.JLabel();
        dispatchval2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        print = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 51, 51));
        setPreferredSize(new java.awt.Dimension(859, 559));

        deliverytable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        deliverytable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deliverytableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(deliverytable);

        orderidlabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        orderidlabel.setForeground(new java.awt.Color(255, 255, 255));
        orderidlabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        orderidlabel.setText("Order ID :");
        orderidlabel.setToolTipText("");
        orderidlabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        orderidvalue.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        orderidvalue.setForeground(new java.awt.Color(255, 255, 255));
        orderidvalue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        orderidvalue.setText("###");
        orderidvalue.setToolTipText("");
        orderidvalue.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        retailerlabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        retailerlabel.setForeground(new java.awt.Color(255, 255, 255));
        retailerlabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        retailerlabel.setText("Retailer name :");
        retailerlabel.setToolTipText("");
        retailerlabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        retnameval.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        retnameval.setForeground(new java.awt.Color(255, 255, 255));
        retnameval.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        retnameval.setText("###");
        retnameval.setToolTipText("");
        retnameval.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        deliverydatelabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        deliverydatelabel.setForeground(new java.awt.Color(255, 255, 255));
        deliverydatelabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deliverydatelabel.setText("Delivery Date :");
        deliverydatelabel.setToolTipText("");
        deliverydatelabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        searchbyretail7.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        searchbyretail7.setForeground(new java.awt.Color(255, 255, 255));
        searchbyretail7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        searchbyretail7.setText("Delivery Status :");
        searchbyretail7.setToolTipText("");
        searchbyretail7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        retailerlabel1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        retailerlabel1.setForeground(new java.awt.Color(255, 255, 255));
        retailerlabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        retailerlabel1.setText("Truck No :");
        retailerlabel1.setToolTipText("");
        retailerlabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        retailerlabel2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        retailerlabel2.setForeground(new java.awt.Color(255, 255, 255));
        retailerlabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        retailerlabel2.setText("In - charge :");
        retailerlabel2.setToolTipText("");
        retailerlabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        trucknocombo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        trucknocombo2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trucknocombo2MouseClicked(evt);
            }
        });
        trucknocombo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trucknocombo2ActionPerformed(evt);
            }
        });

        inchargecombo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        inchargecombo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inchargecombo2ActionPerformed(evt);
            }
        });

        deldate.setDateFormatString("yyyy-M-d ");

        deliverystats.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "undelivered", "delivered" }));
        deliverystats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliverystatsActionPerformed(evt);
            }
        });

        delduedate.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        delduedate.setForeground(new java.awt.Color(255, 255, 255));
        delduedate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        delduedate.setText("Delivery Due Date:");
        delduedate.setToolTipText("");
        delduedate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        duedateval.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        duedateval.setForeground(new java.awt.Color(255, 255, 255));
        duedateval.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        duedateval.setText("###");
        duedateval.setToolTipText("");
        duedateval.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        truckvalid.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        truckvalid.setForeground(new java.awt.Color(255, 255, 255));
        truckvalid.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        truckvalid.setIcon(new javax.swing.ImageIcon(getClass().getResource("/warehouse/icons8-High Priority-32.png"))); // NOI18N
        truckvalid.setToolTipText("");
        truckvalid.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        inchvalid.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        inchvalid.setForeground(new java.awt.Color(255, 255, 255));
        inchvalid.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        inchvalid.setIcon(new javax.swing.ImageIcon(getClass().getResource("/warehouse/icons8-High Priority-32.png"))); // NOI18N
        inchvalid.setToolTipText("");
        inchvalid.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        datevalid.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        datevalid.setForeground(new java.awt.Color(255, 255, 255));
        datevalid.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        datevalid.setIcon(new javax.swing.ImageIcon(getClass().getResource("/warehouse/icons8-High Priority-32.png"))); // NOI18N
        datevalid.setToolTipText("");
        datevalid.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        retlocation.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        retlocation.setForeground(new java.awt.Color(255, 255, 255));
        retlocation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        retlocation.setText("Retailer Location :");
        retlocation.setToolTipText("");
        retlocation.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        retlocval.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        retlocval.setForeground(new java.awt.Color(255, 255, 255));
        retlocval.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        retlocval.setText("###");
        retlocval.setToolTipText("");
        retlocval.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        displayitems.setEditable(false);
        displayitems.setColumns(20);
        displayitems.setRows(5);
        jScrollPane2.setViewportView(displayitems);

        itemlist2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        itemlist2.setForeground(new java.awt.Color(255, 255, 255));
        itemlist2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemlist2.setText("Item List:");
        itemlist2.setToolTipText("");
        itemlist2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        dispatch.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        dispatch.setForeground(new java.awt.Color(255, 255, 255));
        dispatch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dispatch.setText("Dispatch boxes:");
        dispatch.setToolTipText("");
        dispatch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        dispatchval2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        dispatchval2.setForeground(new java.awt.Color(255, 255, 255));
        dispatchval2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dispatchval2.setText("###");
        dispatchval2.setToolTipText("");
        dispatchval2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jButton1.setText("Update");
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        print.setText("Print all Records");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(itemlist2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(dispatch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dispatchval2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemlist2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dispatch, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dispatchval2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(deliverydatelabel)
                            .addComponent(searchbyretail7))
                        .addGap(18, 18, 18)
                        .addComponent(deldate, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(retailerlabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inchargecombo2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deliverystats, 0, 111, Short.MAX_VALUE))
                        .addGap(1, 1, 1)
                        .addComponent(inchvalid, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(154, 154, 154)
                                .addComponent(duedateval, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(orderidlabel)
                                    .addComponent(delduedate)
                                    .addComponent(retailerlabel)
                                    .addComponent(retlocation)
                                    .addComponent(retailerlabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(retlocval, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(trucknocombo2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1)
                                        .addComponent(truckvalid, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(orderidvalue, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                                        .addComponent(retnameval, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(datevalid, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(36, 36, 36))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(orderidvalue, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(orderidlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(retailerlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(retnameval, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(retlocation, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(retlocval, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(duedateval, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delduedate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(truckvalid, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(trucknocombo2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(retailerlabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(inchargecombo2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(retailerlabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(inchvalid, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchbyretail7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deliverystats, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(datevalid, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(deldate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deliverydatelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void trucknocombo2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trucknocombo2MouseClicked

    }//GEN-LAST:event_trucknocombo2MouseClicked

    private void trucknocombo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trucknocombo2ActionPerformed

    }//GEN-LAST:event_trucknocombo2ActionPerformed

    private void inchargecombo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inchargecombo2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inchargecombo2ActionPerformed

    private void deliverytableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deliverytableMouseClicked
        deliverytable.setDefaultEditor(Object.class, null);//cannot edit cell values
        deliverytable.getTableHeader().setReorderingAllowed(false);//cannot change the column positions
        
        double totbox=0;
        truckvalid.setVisible(false);
        inchvalid.setVisible(false);
        datevalid.setVisible(false);
        
        inchargecombo2.setSelectedIndex(0);
        trucknocombo2.setSelectedIndex(0);
        
        int row = deliverytable.getSelectedRow();
        String ordid = deliverytable.getValueAt(row, 0).toString();
        
        orderidvalue.setText(ordid);
        
        try{
            String sql = "select r.ret_name,r.ret_address2 from retailer r, order_1 o where o.ord_id = '"+ordid+"' and o.ret_id = r.ret_id  ";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            if(rs.next())
            {
                retnameval.setText(rs.getString("ret_name"));
                retlocval.setText(rs.getString("ret_address2"));
            }
            
            String sql1 = "select * from delivery where deliveryid = '"+ordid+"'";
            ps = con.prepareStatement(sql1);
            rs = ps.executeQuery();
            
            if(rs.next())
            {
                duedateval.setText(rs.getString("deliveryduedate"));
                trucknocombo2.setSelectedItem(rs.getString("truckno"));
                inchargecombo2.setSelectedItem(rs.getString("incharge"));
                deliverystats.setSelectedItem(rs.getString("deliverystatus"));
                deldate.setDate(rs.getDate("deliverydate"));
                
            }
            
            String sql2 = "select p.prod_name,p.cont_size,o.qty from product p, order_1 o where p.prod_id = o.prod_id and o.ord_id ='"+ordid+"' ";
            ps = con.prepareStatement(sql2);
            rs = ps.executeQuery();
            
            displayitems.setText("");   //this line of command prevents the previously viewed records add with the next records
            while(rs.next())
            {
            String displaytxt1 = rs.getString("prod_name");//.substring(0,9);
            String displaytxt2 = rs.getString("qty");
            int prodqty = Integer.parseInt(displaytxt2);
            int prodsize = Integer.parseInt(rs.getString("cont_size"));
                //totbox=boxcal(prodsize,prodqty);
            totbox=totbox + boxcal(prodsize,prodqty);
            if(displaytxt1.length()>=15)
            {
                displayitems.append("   "+displaytxt1.substring(0,12) +"\t"+ "x"+"\t"+displaytxt2+"\n");
            }
            else
            {
                displayitems.append("   "+displaytxt1+"\t"+ "x"+"\t"+displaytxt2+"\n");
            }
            }
            
            double dispatchdou = Math.ceil(totbox);
            int dispatchint = (int)dispatchdou;
            dispatchval2.setText(Integer.toString(dispatchint));
            
            globaltruckno = trucknocombo2.getSelectedItem().toString();
            globaltruckcap = dispatchval2.getText();
            globaldelstatus=deliverystats.getSelectedItem().toString();
        }
        
        catch(Exception e)
        {
            
        }
            
            
    }//GEN-LAST:event_deliverytableMouseClicked

    private double boxcal(int size, int qty)
    {
        int boxheight = 30;
        int boxwidth = 45;
        int boxlength = 60;
        double boxsize = boxheight*boxwidth*boxlength;
        
        double prodsize = size*qty;
        double noofbox =prodsize/boxsize;
        //System.out.println(noofbox);
        return noofbox;
        
        
        
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        truck t1 = new truck();
        
        truckvalid.setVisible(false);
        inchvalid.setVisible(false);
        datevalid.setVisible(false);
        int rowno = deliverytable.getSelectedRow();
        
        if(rowno != -1)
        {
        
        
        String select = "Select";
        String inch_val = inchargecombo2.getSelectedItem().toString();
        String truck_val = trucknocombo2.getSelectedItem().toString();
        int inchcompare = inch_val.compareTo(select);
        int truckcompare = truck_val.compareTo(select);
        int twotruck = truck_val.compareTo(globaltruckno);
       
            
        
            if(truckcompare == 0)
            {
                truckvalid.setVisible(true);
            }
            if(inchcompare == 0)
            {
                inchvalid.setVisible(true);
            }
            if((deldate.getDate() == null) && (deldate.isEnabled()))
            {
                datevalid.setVisible(true);
            }
            if(twotruck != 0)
            {
                t1.setTruckno(globaltruckno);
                t1.setTruckloadcap(globaltruckcap);
                t1.removeload();
                
            }
            
            if((deliverystats.getSelectedItem().toString() == "delivered")&&(truckcompare != 0)&&(inchcompare != 0)&&(deldate.getDate() != null))
            {
                alldelivery a1 = new alldelivery();
            
                SimpleDateFormat Date_Format = new SimpleDateFormat("yyyy-MM-dd"); 
                String delidate = Date_Format.format(deldate.getDate());
                
                if(globaldelstatus == "delivered")
                {
                    a1.setdel_id(orderidvalue.getText());
                    a1.setTruckno(trucknocombo2.getSelectedItem().toString());
                    a1.setIncharge(inchargecombo2.getSelectedItem().toString());
                    a1.setStatus(deliverystats.getSelectedItem().toString());
            
                    a1.setDelivery_date(delidate);
                    //System.out.println(deldate.getDateFormatString());
                    a1.updatedel();
                
                    viewdelivery();
                }
                else if(twotruck == 0)
                {
                    t1.setTruckno(trucknocombo2.getSelectedItem().toString());
                    t1.setTruckloadcap(dispatchval2.getText());
                
                    t1.removeload();
                
                    a1.setdel_id(orderidvalue.getText());
                    a1.setTruckno(trucknocombo2.getSelectedItem().toString());
                    a1.setIncharge(inchargecombo2.getSelectedItem().toString());
                    a1.setStatus(deliverystats.getSelectedItem().toString());
            
                    a1.setDelivery_date(delidate);
                    //System.out.println(deldate.getDateFormatString());
                    a1.updatedel();
                
                    viewdelivery();
                }
                else
                {
                    t1.setTruckno(trucknocombo2.getSelectedItem().toString());
                    t1.setTruckloadcap(dispatchval2.getText());
                    t1.updateloadcap();
                    t1.removeload();
                
                    a1.setdel_id(orderidvalue.getText());
                    a1.setTruckno(trucknocombo2.getSelectedItem().toString());
                    a1.setIncharge(inchargecombo2.getSelectedItem().toString());
                    a1.setStatus(deliverystats.getSelectedItem().toString());
            
                    a1.setDelivery_date(delidate);
                    //System.out.println(deldate.getDateFormatString());
                    a1.updatedel();
                
                    viewdelivery();
                }
                JOptionPane.showMessageDialog(null,"Record successfully updated!");
            
            }
            if((deliverystats.getSelectedItem().toString() == "undelivered")&&(truckcompare != 0)&&(inchcompare != 0))
            {
                alldelivery a1 = new alldelivery();
                
                t1.setTruckno(trucknocombo2.getSelectedItem().toString());
                t1.setTruckloadcap(dispatchval2.getText());
                
                if(globaldelstatus=="undelivered" && globaltruckno.compareTo(trucknocombo2.getSelectedItem().toString())==0)
                {
                    a1.setdel_id(orderidvalue.getText());
                    a1.setTruckno(trucknocombo2.getSelectedItem().toString());
                    a1.setIncharge(inchargecombo2.getSelectedItem().toString());
                    a1.setStatus(deliverystats.getSelectedItem().toString());
                
                    a1.updateundel();
                    viewdelivery();
                    JOptionPane.showMessageDialog(null,"Record successfully updated!");
                }
                else if(t1.checktruckcap()==true)
                {
                t1.updateloadcap();
                
                a1.setdel_id(orderidvalue.getText());
                a1.setTruckno(trucknocombo2.getSelectedItem().toString());
                a1.setIncharge(inchargecombo2.getSelectedItem().toString());
                a1.setStatus(deliverystats.getSelectedItem().toString());
                
                a1.updateundel();
                viewdelivery();
                JOptionPane.showMessageDialog(null,"Record successfully updated!");
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"Required amount of space is not available in truck "+trucknocombo2.getSelectedItem().toString());
                }
                
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Select a record to proceed further");
        }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void deliverystatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliverystatsActionPerformed
        
        String status = "delivered";
        String delstatus = deliverystats.getSelectedItem().toString();
        int stats = delstatus.compareTo(status);
        
        if(stats == 0)
        {
            deldate.setEnabled(true);
            //deldate.setDateFormatString("0000-00-00");
        }
        else
        {
            deldate.setEnabled(false);
        }
        
        
    }//GEN-LAST:event_deliverystatsActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        
        try{
        String report="C:\\Users\\gange\\Desktop\\whd\\src\\Reports\\deliveryreport.jrxml";
        JasperReport jr=JasperCompileManager.compileReport(report);
        JasperPrint jp=JasperFillManager.fillReport(jr,null,con);
        JasperViewer.viewReport(jp,false);
        }
        catch(Exception e)
        {
            
        }
        
        
        
    }//GEN-LAST:event_printActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel datevalid;
    private com.toedter.calendar.JDateChooser deldate;
    private javax.swing.JLabel delduedate;
    private javax.swing.JLabel deliverydatelabel;
    private javax.swing.JComboBox<String> deliverystats;
    private javax.swing.JTable deliverytable;
    private javax.swing.JLabel dispatch;
    private javax.swing.JLabel dispatchval2;
    private javax.swing.JTextArea displayitems;
    private javax.swing.JLabel duedateval;
    private javax.swing.JComboBox<String> inchargecombo2;
    private javax.swing.JLabel inchvalid;
    private javax.swing.JLabel itemlist2;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel orderidlabel;
    private javax.swing.JLabel orderidvalue;
    private javax.swing.JButton print;
    private javax.swing.JLabel retailerlabel;
    private javax.swing.JLabel retailerlabel1;
    private javax.swing.JLabel retailerlabel2;
    private javax.swing.JLabel retlocation;
    private javax.swing.JLabel retlocval;
    private javax.swing.JLabel retnameval;
    private javax.swing.JLabel searchbyretail7;
    private javax.swing.JComboBox<String> trucknocombo2;
    private javax.swing.JLabel truckvalid;
    // End of variables declaration//GEN-END:variables
}
