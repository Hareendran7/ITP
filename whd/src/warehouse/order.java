package warehouse;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jega rinoshan
 */
public class order extends javax.swing.JPanel {
        Connection con = null;
    PreparedStatement pst = null;       //contains a sql statement which has been pre compiled
  ResultSet rs = null;   //Sql statements which read data from a database query, return the queried data to the resultset.
    SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
    
    int col = 0;
    int row = 0;
    DefaultTableModel tm; 
      float calTotal=0;
  
           
    
    
       
 

    /**
     * Creates new form order
     */
      String ordID;
    public order() {
        initComponents();
        con=database_con. connect();
//        Fillcombo();
        view_Odetails();
        view_fulltable();
        combo();
        genorderid();
        nextcombo();
        order_1.setText(ordID);
        
    }
       private void view_Odetails(){
    
        try{
            String sql="select prod_id as 'Product ID',prod_name as 'product',qty as 'Quantity' from order_1 where ord_id='"+order_1.getText()+"'";
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery(sql);
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));// display the queried the result from db to table
        }
        catch(Exception e){
            System.out.println("error in view_Odetails(): "+e);
        
        }
    }
       
         private void view_fulltable(){
    
        try{
            String sql="select ord_id as 'Order ID',supp_id as 'Supplier ID',ret_id as 'Retailer ID',ord_date as'Order Date',due_date as 'Due Date'from order_1 group by ord_id";
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery(sql);
            table_order.setModel(DbUtils.resultSetToTableModel(rs));// display the queried the result from db to table
        }
        catch(Exception e){
            System.out.println("error in view_fulltable(): "+e);
        
        }
    }
         
         public void genorderid()
         {
             try{
             String sql="select ord_id from order_1 ORDER BY ord_id DESC LIMIT 1";
                 pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            
            
                if(rs.next()){
                String p1=rs.getString("ord_id");
                int ln=p1.length();
                String stxt=p1.substring(0,3);
                String snum=p1.substring(3, ln);
                int n=Integer.parseInt(snum);
                n++;
                snum=Integer.toString(n);
                
                ordID=stxt +snum;
                
                
                
                }
                else{
                    ordID="ord123";
                }
                
             }
             catch(Exception e){}
         
         
         
         }

     
    
    

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton8 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_order = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        qua = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Price = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        amount = new javax.swing.JTextField();
        products = new javax.swing.JComboBox<>();
        odate = new com.toedter.calendar.JDateChooser();
        ddate = new com.toedter.calendar.JDateChooser();
        size = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        orderRS = new javax.swing.JLabel();
        retailerRS = new javax.swing.JLabel();
        supplierRS = new javax.swing.JLabel();
        odateRS = new javax.swing.JLabel();
        ddateRS = new javax.swing.JLabel();
        quantityRS = new javax.swing.JLabel();
        procomb = new javax.swing.JLabel();
        sizeRS = new javax.swing.JLabel();
        amountRS = new javax.swing.JLabel();
        all = new javax.swing.JLabel();
        jcom = new javax.swing.JComboBox<>();
        suppcom = new javax.swing.JComboBox<>();
        order_1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        retdis = new javax.swing.JLabel();
        supp = new javax.swing.JLabel();
        proID = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));
        setLayout(null);

        jButton8.setBackground(new java.awt.Color(51, 51, 51));
        jButton8.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Actions-edit-undo-icon.png"))); // NOI18N
        jButton8.setText("Update");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        add(jButton8);
        jButton8.setBounds(370, 380, 140, 30);

        jButton7.setBackground(new java.awt.Color(102, 102, 102));
        jButton7.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Actions-edit-delete-icon.png"))); // NOI18N
        jButton7.setText("Delete");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        add(jButton7);
        jButton7.setBounds(540, 380, 160, 30);

        table_order.setBackground(new java.awt.Color(51, 51, 51));
        table_order.setForeground(new java.awt.Color(255, 255, 255));
        table_order.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "col 1", "col 2", "col 3", "col 4", "col 5"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_order.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_orderMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                table_orderMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(table_order);

        add(jScrollPane1);
        jScrollPane1.setBounds(30, 420, 800, 106);

        jButton5.setBackground(new java.awt.Color(51, 51, 51));
        jButton5.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("New Entry");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        add(jButton5);
        jButton5.setBounds(190, 380, 140, 30);

        jButton6.setBackground(new java.awt.Color(51, 51, 51));
        jButton6.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit-validated-icon (1).png"))); // NOI18N
        jButton6.setText("ADD");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        add(jButton6);
        jButton6.setBounds(440, 290, 100, 30);

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Retailer ");
        add(jLabel4);
        jLabel4.setBounds(20, 60, 68, 30);

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Supplier ");
        add(jLabel7);
        jLabel7.setBounds(20, 120, 71, 21);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Size");
        add(jLabel5);
        jLabel5.setBounds(300, 190, 33, 37);

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Product Name");
        add(jLabel3);
        jLabel3.setBounds(10, 190, 112, 36);

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Order ID");
        add(jLabel1);
        jLabel1.setBounds(20, 0, 67, 31);

        qua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                quaMouseEntered(evt);
            }
        });
        qua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quaActionPerformed(evt);
            }
        });
        add(qua);
        qua.setBounds(610, 190, 62, 36);

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Due Delivery Date");
        add(jLabel6);
        jLabel6.setBounds(500, 70, 144, 32);

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Order Date");
        add(jLabel2);
        jLabel2.setBounds(540, 10, 88, 33);

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Price Per Unit");
        add(jLabel8);
        jLabel8.setBounds(580, 270, 120, 30);

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Product ID");
        add(jLabel9);
        jLabel9.setBounds(700, 190, 90, 36);

        Price.setEditable(false);
        Price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceActionPerformed(evt);
            }
        });
        add(Price);
        Price.setBounds(730, 270, 140, 30);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "col1 ", "col 2", "col 3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        add(jScrollPane2);
        jScrollPane2.setBounds(50, 260, 350, 106);

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Total Amount");
        add(jLabel10);
        jLabel10.setBounds(580, 310, 108, 36);

        amount.setEditable(false);
        amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountActionPerformed(evt);
            }
        });
        add(amount);
        amount.setBounds(730, 320, 140, 30);

        products.setBackground(new java.awt.Color(51, 51, 51));
        products.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        products.setForeground(new java.awt.Color(255, 255, 255));
        products.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        products.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                productsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                productsMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                productsMouseReleased(evt);
            }
        });
        products.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productsActionPerformed(evt);
            }
        });
        add(products);
        products.setBounds(140, 190, 130, 40);

        odate.setDateFormatString("yyyy-MM-dd");
        odate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                odateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                odateMouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                odateMouseReleased(evt);
            }
        });
        add(odate);
        odate.setBounds(680, 10, 176, 34);

        ddate.setDateFormatString("yyyy-MM-dd");
        ddate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ddateMouseEntered(evt);
            }
        });
        add(ddate);
        ddate.setBounds(680, 70, 176, 33);

        size.setBackground(new java.awt.Color(51, 51, 51));
        size.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        size.setForeground(new java.awt.Color(255, 255, 255));
        size.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        size.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                sizeMouseEntered(evt);
            }
        });
        size.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeActionPerformed(evt);
            }
        });
        add(size);
        size.setBounds(360, 190, 147, 40);

        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Quantity");
        add(jLabel11);
        jLabel11.setBounds(520, 190, 69, 36);

        orderRS.setForeground(new java.awt.Color(255, 255, 255));
        add(orderRS);
        orderRS.setBounds(140, 30, 190, 20);

        retailerRS.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        retailerRS.setForeground(new java.awt.Color(255, 255, 255));
        add(retailerRS);
        retailerRS.setBounds(140, 90, 180, 20);

        supplierRS.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        supplierRS.setForeground(new java.awt.Color(255, 255, 255));
        add(supplierRS);
        supplierRS.setBounds(140, 150, 190, 20);

        odateRS.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        odateRS.setForeground(new java.awt.Color(255, 255, 255));
        odateRS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                odateRSMouseEntered(evt);
            }
        });
        add(odateRS);
        odateRS.setBounds(670, 40, 210, 20);

        ddateRS.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        ddateRS.setForeground(new java.awt.Color(255, 255, 255));
        ddateRS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ddateRSMouseEntered(evt);
            }
        });
        add(ddateRS);
        ddateRS.setBounds(680, 110, 200, 20);

        quantityRS.setForeground(new java.awt.Color(255, 255, 255));
        add(quantityRS);
        quantityRS.setBounds(610, 230, 140, 20);

        procomb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        procomb.setForeground(new java.awt.Color(255, 255, 255));
        add(procomb);
        procomb.setBounds(140, 230, 140, 20);

        sizeRS.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sizeRS.setForeground(new java.awt.Color(255, 255, 255));
        add(sizeRS);
        sizeRS.setBounds(350, 230, 160, 20);
        add(amountRS);
        amountRS.setBounds(730, 360, 140, 20);

        all.setForeground(new java.awt.Color(102, 102, 102));
        add(all);
        all.setBounds(430, 160, 230, 20);

        jcom.setBackground(new java.awt.Color(51, 51, 51));
        jcom.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jcom.setForeground(new java.awt.Color(255, 255, 255));
        jcom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        jcom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcomMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jcomMouseEntered(evt);
            }
        });
        jcom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomActionPerformed(evt);
            }
        });
        add(jcom);
        jcom.setBounds(140, 60, 150, 30);

        suppcom.setBackground(new java.awt.Color(51, 51, 51));
        suppcom.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        suppcom.setForeground(new java.awt.Color(255, 255, 255));
        suppcom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        suppcom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                suppcomMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                suppcomMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                suppcomMouseExited(evt);
            }
        });
        suppcom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppcomActionPerformed(evt);
            }
        });
        add(suppcom);
        suppcom.setBounds(140, 120, 150, 30);

        order_1.setBackground(new java.awt.Color(51, 51, 51));
        order_1.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        order_1.setForeground(new java.awt.Color(255, 255, 255));
        add(order_1);
        order_1.setBounds(140, 0, 150, 30);

        jButton1.setBackground(new java.awt.Color(51, 51, 51));
        jButton1.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Retailer payment Details");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(650, 530, 180, 30);

        retdis.setBackground(new java.awt.Color(102, 102, 102));
        retdis.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        retdis.setForeground(new java.awt.Color(255, 255, 255));
        add(retdis);
        retdis.setBounds(310, 60, 80, 30);

        supp.setBackground(new java.awt.Color(51, 51, 51));
        supp.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        supp.setForeground(new java.awt.Color(255, 255, 255));
        add(supp);
        supp.setBounds(310, 120, 80, 30);

        proID.setBackground(new java.awt.Color(51, 51, 51));
        proID.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        proID.setForeground(new java.awt.Color(255, 255, 255));
        add(proID);
        proID.setBounds(800, 190, 80, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

          genorderid();
        order_1.setText(ordID);
        products.setSelectedIndex(0);
               size.setSelectedIndex(0);
              jcom.setSelectedIndex(0);
           suppcom.setSelectedIndex(0);
        odateRS.setText("");
       ddateRS.setText("");
       orderRS.setText("");
       retailerRS.setText("");
       supplierRS.setText("");
       quantityRS.setText("");
        amount.setText("");
        //order_1.setText("");
         odate.setCalendar(null);
         ddate.setCalendar(null);
         supp.setText("");
         retdis.setText("");
         qua.setText("");
         procomb.setText("");
         sizeRS.setText("");
         
         row = 0;
         //tm =(DefaultTableModel)jTable1.getModel();
        // tm.removeRow(0);
         
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       
       
          
        
                    if(amount.getText().isEmpty()){
                        amountRS.setText("");
                    
                    
           }
        
                    if( size.getSelectedItem()== "Select")
         {
              sizeRS.setText("*Required field");
         }
             
        
                  if( products.getSelectedItem()== "Select")
         {
              procomb.setText("*Required field");
         }
                 if(order_1.getText().isEmpty())
         {
              orderRS.setText("*Required field");
         }
            
                           if(supp.getText().isEmpty())
         {
              supplierRS.setText("*Select Supplier");
         }
                            if(odate.getDate() == null)
         {
              odateRS.setText("*Required field");
         }
                                     if(qua.getText().isEmpty())
         {
              quantityRS.setText("*Required field");
         }
                                if(ddate.getDate() == null)
         {
              ddateRS.setText("*Required field");
         }
                                             if(retdis.getText().isEmpty())
         {
              retailerRS.setText("*Select Retailer");
         }
                                            
            /*     try{
             String sql="select prod_id from order_1 where productname='"+products.getSelectedItem().toString()+"' and size_1='"+size.getSelectedItem().toString()+"' ";
                     pst=con.prepareStatement(sql);
                                  rs=pst.executeQuery(); 
             
             
             
               while(rs.next()){
                                  String checkpro=rs.getString("prod_id");
                                  
                                  
                                  if((products.getSelectedItem().toString() == null ? checkpro != null : !products.getSelectedItem().toString().equals(checkpro))){
                                  JOptionPane.showMessageDialog(null, "you can not edit orderid and Supplierid");
                                  
                                  
                                  }*/
                                 
                                             
           if(retdis.getText().isEmpty() || ddate.getDate() == null || qua.getText().isEmpty() || odate.getDate() == null || supp.getText().isEmpty() || order_1.getText().isEmpty() ||products.getSelectedItem()== "Select"|| size.getSelectedItem()== "Select") {
                                                                all.setText("Please make sure all required fileds(*) are filled");
                                }                   
                                
                                else {  
               
               
                           if(odate.getDate().after(ddate.getDate())){
            
                
                JOptionPane.showMessageDialog(null,"Date Should be after Order date");
            }            
                                                
                           else{                                    
                                                
                                                                   methodw m1 = new methodw();
                                
             calTotal=(Float.parseFloat(qua.getText()) * Float.parseFloat(Price.getText()));
           String convert=Float.toString(calTotal );
           amount.setText(convert);
           
          
           
        
       m1.SetProductname((String) products.getSelectedItem());
          m1.SetQty(qua.getText());
        String ordate =sdf.format(odate.getDate());
            String dedate =sdf.format(ddate.getDate());
        m1.setproID(proID.getText());
        m1.SetOrderid(order_1.getText());
        m1.setSize((String) size.getSelectedItem());
         m1.setDate(ordate);
         m1.SetSup(supp.getText());
            m1.SetRetid(retdis.getText());
        
         m1.SetDel_id(dedate);
         m1.setTot(amount.getText());
         
        
         
         m1.Connet();
         
        
          Price.setText("");
         amount.setText("");
         qua.setText("");
       products.setSelectedIndex(0);
       size.setSelectedIndex(0);
       proID.setText("");
       
                                                
                                                
                                                
                                                
                                                
                                   
                                   
                                       
                                    
                           }    
                                
               
              }
           
            view_Odetails();
           view_fulltable();
        /* catch(Exception e){}  
          ;
           
           
        
      */

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

 /*   private void Fillcombo(){
      String one;
            one = supp.getText().toString();
     
    
    
    try{
        String q="select productname from product where supp_id=1";
             pst = con.prepareStatement(q);
                       rs= pst.executeQuery();
                        
            while(rs.next()){
            String name=rs.getString("productname");
            products.addItem(name);
            }            
    }
    catch(Exception e){
        
    }
      
    
    }*/
    
    private void quaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quaActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
      methodw m1= new methodw();
                     
                     int rowno = table_order.getSelectedRow();
                     if (rowno == -1)
                {
                    JOptionPane.showMessageDialog(null, "Please select a row to Delete");
                }
                     else{
                     String row_id= table_order.getValueAt(rowno,0).toString();
                   // m1. deletersuprecord(row_id);
                     m1.deleterrecord(row_id);
                     
                       amount.setText("");
                       order_1.setText("");
                       supp.setText("");
                       retdis.setText("");
                     
                     }
                        view_fulltable();
                        view_Odetails();
                        
                        
                        
                    
                   
                        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void PriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PriceActionPerformed

    private void productsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productsActionPerformed
  
        
       
        
        
        
        /*    if (products.getSelectedIndex() != 0) {
        try{
        String q="select quantity_per_box from product where productname='"+products.getSelectedItem().toString()+"'";
             pst = con.prepareStatement(q);
                       rs= pst.executeQuery();
                        
            while(rs.next()){
            int name=rs.getInt("quantity_per_box");
            perBox.setText(String.valueOf(name));
            }     
        
    }
    catch(Exception e){
        
    }    
    
      }
      else {
          perBox.setText(null);
      }
      */
  /*try{
      String q="select size_1 from product where prod_name='"+((String) products.getSelectedItem())+"'";
             pst = con.prepareStatement(q);
                       rs= pst.executeQuery();
                        
            while(rs.next()){
            String name=rs.getString("size_1");
            size.addItem(name);
            }
      }
      catch(Exception e)
      {
          System.out.println("Error in products combobox: "+e);
      }
        */
    }//GEN-LAST:event_productsActionPerformed

    private void productsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productsMouseEntered
       
        
        /* if (products.getSelectedItem().toString() == "Select") {                 
          products.removeAllItems();
          //products.addItem("Select");
        //  String select;
      //   if(supp=="select"){
        */
       //products.revalidate();
       
       /*
       try{
            
        String q="select prod_name from product where supp_id='"+supp.getText()+"' group by prod_name";
             pst = con.prepareStatement(q);
                       rs= pst.executeQuery();
                        
            while(rs.next()){
            String name=rs.getString("prod_name");
            products.addItem(name);
            
            }
            
    }
    catch(Exception e){
        
    }
         */
    }//GEN-LAST:event_productsMouseEntered

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
    methodw m1= new methodw();
  
    //   String supplierid=supp.getText();
    int row_no = table_order.getSelectedRow();
    if (row_no == -1)
    {
        JOptionPane.showMessageDialog(null, "Please select a row to Update");
    }
    else 
    {
        String row_id= table_order.getValueAt(row_no,0).toString();
        try{
            String sql="select supp_id,ord_id from order_1 where ord_id='"+row_id+"' ";
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
                                  
            while(rs.next()){
            String update=rs.getString("supp_id");
            String updateor=rs.getString("ord_id");
                                  
                                  
            if ((order_1.getText() == null ? updateor != null : !order_1.getText().equals(updateor)) || (supp.getText() == null ? update != null : !supp.getText().equals(update)))
            {
                JOptionPane.showMessageDialog(null, "you can not edit orderid and Supplierid");
                                   
                amount.setText("");
                //  order_1.setText("");
                //odate.setDate(""); 
                odate.setCalendar(null);
                supp.setText("");
                retdis.setText("");
                qua.setText("");
                ddate.setCalendar(null);
                products.setSelectedIndex(0);
                size.setSelectedIndex(0);
                jcom.setSelectedIndex(0);
                suppcom.setSelectedIndex(0);
                jTable1.removeAll();
                row = 0;
                genorderid();
                order_1.setText(ordID);                                   
            }                                              
                                  
                           /*        else if (supp.getText() == null ? update != null : !supp.getText().equals(update)){ 
                                        
                                      
                                      
                                       JOptionPane.showMessageDialog(null, "you can not edit supplierid");
                                        amount.setText("");
                                                                                order_1.setText("");
                                                                                //odate.setDate(""); 
                                                                                odate.setCalendar(null);
                                                                                supp.setText("");
                                                                                ret.setText("");
                                                                                qua.setText("");
                                                                                ddate.setCalendar(null);

                                                                                jTable1.removeAll();
                                                                                row = 0;
                                                                                
                                     
                                         
                                  
                                 }*/
                                  
                                  
                               
            else
            {
                String ordate =sdf.format(odate.getDate());
                String dedate =sdf.format(ddate.getDate());
                //String uporderID = order_1.getText();
                String upretailerID=retdis.getText();
                //  m1.SetOrderid(uporderID);
                m1.setDate(ordate);
                m1.SetRetid(upretailerID);
                m1.SetDel_id(dedate);

                m1.updaterecord(row_id);
         
        
                products.setSelectedIndex(0);
                size.setSelectedIndex(0);
                jcom.setSelectedIndex(0);
                suppcom.setSelectedIndex(0);
                amount.setText("");
                order_1.setText("");
                //odate.setDate(""); 
                odate.setCalendar(null);
                supp.setText("");
                retdis.setText("");
                qua.setText("");
                ddate.setCalendar(null);

                jTable1.removeAll();
                genorderid();
                order_1.setText(ordID);
                                                                             
                row = 0;
                                                                                

                                          
                                  
            }
                                 
                
        }                                 
    }
    catch(Exception e)
    {
        System.out.println("error big "+e);
    } 
                                                                                                                            
    
    view_fulltable();
    }
                     
                 
                     
    }//GEN-LAST:event_jButton8ActionPerformed

    private void table_orderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_orderMouseClicked
           int row=table_order.getSelectedRow();
          String row_id=table_order.getValueAt(row, 0).toString();
          
          if(row!=-1)
          {
            try{
               String sql="select ord_id ,ord_date,due_date,supp_id,ret_id from order_1 where ord_id='"+row_id+"' ";
                pst=con.prepareStatement(sql);
                rs=pst.executeQuery();
                
                   if(rs.next()){
                String uporderID = rs.getString("ord_id");
                String upretailerID=rs.getString("ret_id");
                String upsuppID = rs.getString("supp_id");
               // String upodate=sdf.format(rs.getDate("ord_date"));
               // String uptotal=rs.getString("total");
                //String upodate =rs.getString("ord_date");
                
                
                order_1.setText(uporderID);
                retdis.setText(upretailerID);
                supp.setText(upsuppID);
                odate.setDate(rs.getDate("ord_date"));
                ddate.setDate(rs.getDate("due_date"));
               
               // amount.setText(uptotal);
                   }
                
           }
           catch(Exception e){}
          
           try{
            String sql="select prod_id as 'Product ID',prod_name as 'Product',qty as 'Quantity' from order_1 where ord_id='"+row_id+"'";
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery(sql);
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));// display the queried the result from db to table
        }
        catch(Exception e){
            System.out.println("error 1 "+e);
        
        }
           try{
               
               String sql="select SUM(total) from order_1 where ord_id='"+order_1.getText()+"' ";
                pst=con.prepareStatement(sql);
            rs=pst.executeQuery(sql);
                  while(rs.next()){
            String sentamount=rs.getString("SUM(total)");
            amount.setText(sentamount);
            }  
                
                
           }
           catch(Exception e){
           
           System.out.print("error 2"+e);
           }
           
     
                   try{
        String q="select ret_name from retailer where ret_id= '"+retdis.getText()+"' ";
             pst = con.prepareStatement(q);
                       rs= pst.executeQuery();
                        
            while(rs.next()){
            String retnamek=rs.getString("ret_name");
            jcom.setSelectedItem(retnamek);
            }     
        
    }
    catch(Exception e){
        System.out.println("error 3"+e);
        
    } 
               
                 try{
        String q="select supp_name from supplier where supp_id='"+supp.getText()+"' ";
             pst = con.prepareStatement(q);
                       rs= pst.executeQuery();
                        
            while(rs.next()){
            String retnamec=rs.getString("supp_name");
            suppcom.setSelectedItem(retnamec);
            }     
        
    }
    catch(Exception e){
        System.out.println("error 4"+e);
        
    } 
          }
    }//GEN-LAST:event_table_orderMouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
          
                             int rowcount = jTable1.getSelectedRow();
                     if (rowcount == -1)
                     {
                            JOptionPane.showMessageDialog(null, "Please select a row to Delete");
                     
                     }
                     else{
                       String count_id= jTable1.getValueAt(rowcount,0).toString();
                          try{
                 
                     String sql= "DELETE FROM order_1 where prod_id = '"+count_id+"' and ord_id='"+order_1.getText()+"' "  ;
                         pst = con.prepareStatement(sql);
                        pst.execute();
                            
                 
                 }
                   catch(Exception e)
                {
                System.out.println("error"+e);
                }
                     
                     }
                     view_Odetails();
                     view_fulltable();
                   
    }//GEN-LAST:event_jTable1MouseClicked

    private void sizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sizeMouseEntered
         /*   if (size.getSelectedItem().toString() == "Select") {                 
          size.removeAllItems();
          size.addItem("Select");
        //  String select;
      //   if(supp=="select"){
        
        try{
        String q="select size_1 from product where prod_name='"+((String) products.getSelectedItem())+"'";
             pst = con.prepareStatement(q);
                       rs= pst.executeQuery();
                        
            while(rs.next()){
            String name=rs.getString("size_1");
            size.addItem(name);
            }            
    }
    catch(Exception e){
        
    }
         }  */
         
         size.removeAllItems();
        try{
            
            
        String q2="select size_1 from product where prod_name='"+((String) products.getSelectedItem())+"'";
            pst = con.prepareStatement(q2);
            rs= pst.executeQuery();
            
            while(rs.next()){
               
            String name=rs.getString("size_1");
            size.addItem(name);
            }
            
           /* String q1="select prod_name from product where supp_id='"+supp.getText()+"' group by prod_name";
            pst = con.prepareStatement(q1);
            rs= pst.executeQuery();
             
            while(rs.next()){
            String name=rs.getString("prod_name");
            products.addItem(name);
            }   */
            
            
        }
        catch(Exception e)
        {
            System.out.println("Error in productsMouseExited: "+e);
                    
        }
        
        
        
        
          
    }//GEN-LAST:event_sizeMouseEntered

    private void sizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeActionPerformed
       
    if (products.getSelectedItem().toString().compareTo("Select")!=0) 
    {
        try
        {
            String q="select sell_price from product where prod_name='"+products.getSelectedItem().toString()+"' and size_1='"+size.getSelectedItem().toString()+"'";
            pst = con.prepareStatement(q);
            rs= pst.executeQuery();
                        
            while(rs.next()){
            Double name=rs.getDouble("sell_price");
            Price.setText(name.toString());
            }
            
            String q1="select prod_id from product where prod_name='"+products.getSelectedItem().toString()+"' and size_1='"+size.getSelectedItem().toString()+"'";
            pst = con.prepareStatement(q1);
            rs= pst.executeQuery();
                        
            while(rs.next()){
           String name=rs.getString("prod_id");
            proID.setText(String.valueOf(name));
            }
        
        }
        catch(Exception e)
        {
        
        }
    }
      
    }//GEN-LAST:event_sizeActionPerformed
    private void combo(){
         try{
        String q="select ret_name from retailer";
             pst = con.prepareStatement(q);
                       rs= pst.executeQuery();
                        
            while(rs.next()){
            String Retname=rs.getString("ret_name");
          
            jcom.addItem(Retname);
            }     
        
    }
    catch(Exception e){
        
    } 
    
    
    
    }
    
    private void nextcombo(){
    
             try{
        String q="select supp_name from supplier";
             pst = con.prepareStatement(q);
                       rs= pst.executeQuery();
                        
            while(rs.next()){
            String Retname=rs.getString("supp_name");
          
            suppcom.addItem(Retname);
            }     
        
    }
    catch(Exception e){
        
    } 
    
    
    
    }
    private void amountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountActionPerformed

    private void odateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_odateMouseEntered
       
    }//GEN-LAST:event_odateMouseEntered

    private void ddateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ddateMouseEntered
       ddateRS.setText("");
    }//GEN-LAST:event_ddateMouseEntered

    private void quaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quaMouseEntered
        quantityRS.setText("");
    }//GEN-LAST:event_quaMouseEntered

    private void odateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_odateMouseClicked
       
    }//GEN-LAST:event_odateMouseClicked

    private void odateMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_odateMouseReleased
         // TODO add your handling code here:
    }//GEN-LAST:event_odateMouseReleased

    private void odateRSMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_odateRSMouseEntered
      odateRS.setText("");
      all.setText("");
    }//GEN-LAST:event_odateRSMouseEntered

    private void ddateRSMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ddateRSMouseEntered
        ddateRS.setText("");
        all.setText("");
    }//GEN-LAST:event_ddateRSMouseEntered

    private void sizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sizeMouseClicked
       sizeRS.setText("");
       all.setText("");
       
    }//GEN-LAST:event_sizeMouseClicked

    private void productsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productsMouseClicked
        //procomb.setText("");
        //all.setText("");
        
    }//GEN-LAST:event_productsMouseClicked

    private void jcomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomActionPerformed
  if (jcom.getSelectedIndex() != 0) {
        try{
        String q="select ret_id from retailer where ret_name='"+jcom.getSelectedItem().toString()+"' ";
             pst = con.prepareStatement(q);
                       rs= pst.executeQuery();
                        
            while(rs.next()){
            String proiddis=rs.getString("ret_id");
            retdis.setText(String.valueOf(proiddis));
           ;
            }     
        
    }
    catch(Exception e){
        
    } 
  }
                
    }//GEN-LAST:event_jcomActionPerformed

    private void jcomMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcomMouseEntered
      
    }//GEN-LAST:event_jcomMouseEntered

    private void suppcomMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suppcomMouseEntered
      //
    }//GEN-LAST:event_suppcomMouseEntered

    private void suppcomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppcomActionPerformed
      
        
        if (suppcom.getSelectedIndex() != 0) {
            
        try{
        String q="select supp_id from supplier where supp_name='"+suppcom.getSelectedItem().toString()+"' ";
             pst = con.prepareStatement(q);
                       rs= pst.executeQuery();
                        
            while(rs.next()){
            String proiddis=rs.getString("supp_id");
            supp.setText(proiddis);
            }
            
            products.removeAllItems();
            
            String q1="select prod_name from product where supp_id='"+supp.getText()+"' group by prod_name";
            pst = con.prepareStatement(q1);
            rs= pst.executeQuery();
                        
            while(rs.next()){
            String name=rs.getString("prod_name");
            products.addItem(name);
            }   
            
            
            
        }
    catch(Exception e){
        
    } 
  
        }      
    }//GEN-LAST:event_suppcomActionPerformed

    private void table_orderMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_orderMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_table_orderMouseEntered

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      
        try{
        String Report="C:\\Users\\gange\\Desktop\\whd\\src\\Reports\\payment1.jrxml";
      JasperReport JASP_REP=JasperCompileManager.compileReport(Report);
      JasperPrint JASP_PRINT=JasperFillManager.fillReport(JASP_REP,null,con);
      JasperViewer.viewReport(JASP_PRINT,false);
        }
        
        
        catch(Exception e){
            
        }
        
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jcomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcomMouseClicked
        retailerRS.setText("");
       
    }//GEN-LAST:event_jcomMouseClicked

    private void suppcomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suppcomMouseClicked
       supplierRS.setText("");
       
       
    }//GEN-LAST:event_suppcomMouseClicked

    private void productsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productsMouseExited
        
    }//GEN-LAST:event_productsMouseExited

    private void productsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productsMouseReleased
        
    }//GEN-LAST:event_productsMouseReleased

    private void suppcomMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suppcomMouseExited
                   
    }//GEN-LAST:event_suppcomMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Price;
    private javax.swing.JLabel all;
    private javax.swing.JTextField amount;
    private javax.swing.JLabel amountRS;
    private com.toedter.calendar.JDateChooser ddate;
    private javax.swing.JLabel ddateRS;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> jcom;
    private com.toedter.calendar.JDateChooser odate;
    private javax.swing.JLabel odateRS;
    private javax.swing.JLabel orderRS;
    private javax.swing.JLabel order_1;
    private javax.swing.JLabel proID;
    private javax.swing.JLabel procomb;
    private javax.swing.JComboBox<String> products;
    private javax.swing.JTextField qua;
    private javax.swing.JLabel quantityRS;
    private javax.swing.JLabel retailerRS;
    private javax.swing.JLabel retdis;
    private javax.swing.JComboBox<String> size;
    private javax.swing.JLabel sizeRS;
    private javax.swing.JLabel supp;
    private javax.swing.JComboBox<String> suppcom;
    private javax.swing.JLabel supplierRS;
    private javax.swing.JTable table_order;
    // End of variables declaration//GEN-END:variables
}
